

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 18 14:24:48 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Version 2.35
    59                           ; Generated 05/05/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F25K80 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	smallconst
    95   001000                     __psmallconst:
    96                           	callstack 0
    97   001000  00                 	db	0
    98   001001                     _tri:
    99                           	callstack 0
   100   001001  09                 	db	9
   101   001002  11                 	db	17
   102   001003  1A                 	db	26
   103   001004  22                 	db	34
   104   001005  2B                 	db	43
   105   001006  33                 	db	51
   106   001007  3C                 	db	60
   107   001008  44                 	db	68
   108   001009  4D                 	db	77
   109   00100A  55                 	db	85
   110   00100B  5E                 	db	94
   111   00100C  66                 	db	102
   112   00100D  6F                 	db	111
   113   00100E  77                 	db	119
   114   00100F  80                 	db	128
   115   001010  88                 	db	136
   116   001011  91                 	db	145
   117   001012  99                 	db	153
   118   001013  A2                 	db	162
   119   001014  AA                 	db	170
   120   001015  B3                 	db	179
   121   001016  BB                 	db	187
   122   001017  C4                 	db	196
   123   001018  CC                 	db	204
   124   001019  D5                 	db	213
   125   00101A  DD                 	db	221
   126   00101B  E6                 	db	230
   127   00101C  EE                 	db	238
   128   00101D  F7                 	db	247
   129   00101E  FF                 	db	255
   130   00101F  F7                 	db	247
   131   001020  EE                 	db	238
   132   001021  E6                 	db	230
   133   001022  DD                 	db	221
   134   001023  D5                 	db	213
   135   001024  CC                 	db	204
   136   001025  C4                 	db	196
   137   001026  BB                 	db	187
   138   001027  B3                 	db	179
   139   001028  AA                 	db	170
   140   001029  A2                 	db	162
   141   00102A  99                 	db	153
   142   00102B  91                 	db	145
   143   00102C  88                 	db	136
   144   00102D  80                 	db	128
   145   00102E  77                 	db	119
   146   00102F  6F                 	db	111
   147   001030  66                 	db	102
   148   001031  5E                 	db	94
   149   001032  56                 	db	86
   150   001033  4D                 	db	77
   151   001034  44                 	db	68
   152   001035  3C                 	db	60
   153   001036  33                 	db	51
   154   001037  2B                 	db	43
   155   001038  22                 	db	34
   156   001039  1A                 	db	26
   157   00103A  11                 	db	17
   158   00103B  09                 	db	9
   159   00103C  00                 	db	0
   160   00103D                     __end_of_tri:
   161                           	callstack 0
   162   00103D                     _car:
   163                           	callstack 0
   164   00103D  00                 	db	0
   165   00103E  00                 	db	0
   166   00103F  00                 	db	0
   167   001040  00                 	db	0
   168   001041  00                 	db	0
   169   001042  00                 	db	0
   170   001043  00                 	db	0
   171   001044  00                 	db	0
   172   001045  00                 	db	0
   173   001046  00                 	db	0
   174   001047  00                 	db	0
   175   001048  00                 	db	0
   176   001049  00                 	db	0
   177   00104A  00                 	db	0
   178   00104B  00                 	db	0
   179   00104C  00                 	db	0
   180   00104D  00                 	db	0
   181   00104E  00                 	db	0
   182   00104F  00                 	db	0
   183   001050  00                 	db	0
   184   001051  00                 	db	0
   185   001052  00                 	db	0
   186   001053  00                 	db	0
   187   001054  00                 	db	0
   188   001055  00                 	db	0
   189   001056  00                 	db	0
   190   001057  00                 	db	0
   191   001058  00                 	db	0
   192   001059  00                 	db	0
   193   00105A  00                 	db	0
   194   00105B  FF                 	db	255
   195   00105C  FF                 	db	255
   196   00105D  FF                 	db	255
   197   00105E  FF                 	db	255
   198   00105F  FF                 	db	255
   199   001060  FF                 	db	255
   200   001061  FF                 	db	255
   201   001062  FF                 	db	255
   202   001063  FF                 	db	255
   203   001064  FF                 	db	255
   204   001065  FF                 	db	255
   205   001066  FF                 	db	255
   206   001067  FF                 	db	255
   207   001068  FF                 	db	255
   208   001069  FF                 	db	255
   209   00106A  FF                 	db	255
   210   00106B  FF                 	db	255
   211   00106C  FF                 	db	255
   212   00106D  FF                 	db	255
   213   00106E  FF                 	db	255
   214   00106F  FF                 	db	255
   215   001070  FF                 	db	255
   216   001071  FF                 	db	255
   217   001072  FF                 	db	255
   218   001073  FF                 	db	255
   219   001074  FF                 	db	255
   220   001075  FF                 	db	255
   221   001076  FF                 	db	255
   222   001077  FF                 	db	255
   223   001078  FF                 	db	255
   224   001079                     __end_of_car:
   225                           	callstack 0
   226   001079                     _sin:
   227                           	callstack 0
   228   001079  FE                 	db	254
   229   00107A  FE                 	db	254
   230   00107B  FC                 	db	252
   231   00107C  F9                 	db	249
   232   00107D  F4                 	db	244
   233   00107E  EE                 	db	238
   234   00107F  E7                 	db	231
   235   001080  DE                 	db	222
   236   001081  D5                 	db	213
   237   001082  CA                 	db	202
   238   001083  BF                 	db	191
   239   001084  B3                 	db	179
   240   001085  A7                 	db	167
   241   001086  9A                 	db	154
   242   001087  8D                 	db	141
   243   001088  7F                 	db	127
   244   001089  72                 	db	114
   245   00108A  65                 	db	101
   246   00108B  58                 	db	88
   247   00108C  4C                 	db	76
   248   00108D  40                 	db	64
   249   00108E  35                 	db	53
   250   00108F  2A                 	db	42
   251   001090  21                 	db	33
   252   001091  18                 	db	24
   253   001092  11                 	db	17
   254   001093  0B                 	db	11
   255   001094  06                 	db	6
   256   001095  03                 	db	3
   257   001096  01                 	db	1
   258   001097  00                 	db	0
   259   001098  01                 	db	1
   260   001099  03                 	db	3
   261   00109A  06                 	db	6
   262   00109B  0B                 	db	11
   263   00109C  11                 	db	17
   264   00109D  18                 	db	24
   265   00109E  21                 	db	33
   266   00109F  2A                 	db	42
   267   0010A0  35                 	db	53
   268   0010A1  40                 	db	64
   269   0010A2  4C                 	db	76
   270   0010A3  58                 	db	88
   271   0010A4  65                 	db	101
   272   0010A5  72                 	db	114
   273   0010A6  80                 	db	128
   274   0010A7  8D                 	db	141
   275   0010A8  9A                 	db	154
   276   0010A9  A7                 	db	167
   277   0010AA  B3                 	db	179
   278   0010AB  BF                 	db	191
   279   0010AC  CA                 	db	202
   280   0010AD  D5                 	db	213
   281   0010AE  DE                 	db	222
   282   0010AF  E7                 	db	231
   283   0010B0  EE                 	db	238
   284   0010B1  F4                 	db	244
   285   0010B2  F9                 	db	249
   286   0010B3  FC                 	db	252
   287   0010B4  FE                 	db	254
   288   0010B5                     __end_of_sin:
   289                           	callstack 0
   290   0010B5                     _spi_configuration:
   291                           	callstack 0
   292   0010B5  00                 	db	0
   293   0010B6  40                 	db	64
   294   0010B7  01                 	db	1
   295   0010B8  00                 	db	0
   296   0010B9                     __end_of_spi_configuration:
   297                           	callstack 0
   298   000000                     _RCREG1	set	4014
   299   000000                     _TXREG1	set	4013
   300   000000                     _SPBRG1	set	4015
   301   000000                     _TXSTA1	set	4012
   302   000000                     _RCSTA1	set	4011
   303   0010B9                     STR_1:
   304   0010B9  76                 	db	118	;'v'
   305   0010BA  65                 	db	101	;'e'
   306   0010BB  75                 	db	117	;'u'
   307   0010BC  69                 	db	105	;'i'
   308   0010BD  6C                 	db	108	;'l'
   309   0010BE  6C                 	db	108	;'l'
   310   0010BF  65                 	db	101	;'e'
   311   0010C0  72                 	db	114	;'r'
   312   0010C1  20                 	db	32
   313   0010C2  65                 	db	101	;'e'
   314   0010C3  6E                 	db	110	;'n'
   315   0010C4  74                 	db	116	;'t'
   316   0010C5  72                 	db	114	;'r'
   317   0010C6  65                 	db	101	;'e'
   318   0010C7  72                 	db	114	;'r'
   319   0010C8  20                 	db	32
   320   0010C9  75                 	db	117	;'u'
   321   0010CA  6E                 	db	110	;'n'
   322   0010CB  65                 	db	101	;'e'
   323   0010CC  20                 	db	32
   324   0010CD  74                 	db	116	;'t'
   325   0010CE  6F                 	db	111	;'o'
   326   0010CF  75                 	db	117	;'u'
   327   0010D0  63                 	db	99	;'c'
   328   0010D1  68                 	db	104	;'h'
   329   0010D2  65                 	db	101	;'e'
   330   0010D3  20                 	db	32
   331   0010D4  00                 	db	0
   332   0010D5                     STR_2:
   333   0010D5  25                 	db	37
   334   0010D6  63                 	db	99	;'c'
   335   0010D7  00                 	db	0
   336   0010D8  00                 	db	0	; dummy byte at the end
   337   000000                     
   338                           	psect	nvCOMRAM
   339   00004E                     __pnvCOMRAM:
   340                           	callstack 0
   341   00004E                     _EUSART1_FramingErrorHandler:
   342                           	callstack 0
   343   00004E                     	ds	2
   344   000050                     _TMR1_InterruptHandler:
   345                           	callstack 0
   346   000050                     	ds	2
   347   000052                     _timer1ReloadVal:
   348                           	callstack 0
   349   000052                     	ds	2
   350   000054                     _EUSART1_RxDefaultInterruptHandler:
   351                           	callstack 0
   352   000054                     	ds	2
   353   000056                     _EUSART1_TxDefaultInterruptHandler:
   354                           	callstack 0
   355   000056                     	ds	2
   356   000058                     _eusart1TxBufferRemaining:
   357                           	callstack 0
   358   000058                     	ds	1
   359                           
   360                           	psect	nvBANK0
   361   00008D                     __pnvBANK0:
   362                           	callstack 0
   363   00008D                     _EUSART1_ErrorHandler:
   364                           	callstack 0
   365   00008D                     	ds	2
   366   00008F                     _EUSART1_OverrunErrorHandler:
   367                           	callstack 0
   368   00008F                     	ds	2
   369   000000                     _LATAbits	set	3977
   370   000000                     _RCSTA1bits	set	4011
   371   000000                     _TXSTA1bits	set	4012
   372   000000                     _T1GCONbits	set	4010
   373   000000                     _T1CONbits	set	4045
   374   000000                     _SSPCON1bits	set	4038
   375   000000                     _TRISCbits	set	3988
   376   000000                     _WPUB	set	3931
   377   000000                     _ANCON1	set	3932
   378   000000                     _ANCON0	set	3933
   379   000000                     _LATA	set	3977
   380   000000                     _REFOCON	set	3994
   381   000000                     _OSCTUNE	set	3995
   382   000000                     _OSCCON2	set	4050
   383   000000                     _OSCCON	set	4051
   384   000000                     _INTCON2bits	set	4081
   385   000000                     _PIE1bits	set	3997
   386   000000                     _PIR1bits	set	3998
   387   000000                     _SSPCON2	set	4037
   388   000000                     _SSPCON1	set	4038
   389   000000                     _SSPSTAT	set	4039
   390   000000                     _TRISA	set	3986
   391   000000                     _LATC	set	3979
   392   000000                     _LATB	set	3978
   393   000000                     _TRISC	set	3988
   394   000000                     _TRISB	set	3987
   395   000000                     _SPBRGH1	set	3965
   396   000000                     _INTCONbits	set	4082
   397   000000                     _T1CON	set	4045
   398   000000                     _TMR1L	set	4046
   399   000000                     _TMR1H	set	4047
   400   000000                     _RCONbits	set	4048
   401   000000                     _SSPBUF	set	4041
   402   000000                     _SSPADD	set	4040
   403   000000                     _BAUDCON1	set	4007
   404   000000                     _T1GCON	set	4010
   405                           
   406                           ; #config settings
   407                           
   408                           	psect	cinit
   409   00182C                     __pcinit:
   410                           	callstack 0
   411   00182C                     start_initialization:
   412                           	callstack 0
   413   00182C                     __initialization:
   414                           	callstack 0
   415                           
   416                           ; Clear objects allocated to BANK0 (40 bytes)
   417   00182C  EE00  F060         	lfsr	0,__pbssBANK0
   418   001830  0E28               	movlw	40
   419   001832                     clear_0:
   420   001832  6AEE               	clrf	postinc0,c
   421   001834  06E8               	decf	wreg,f,c
   422   001836  E1FD               	bnz	clear_0
   423                           
   424                           ; Clear objects allocated to COMRAM (29 bytes)
   425   001838  EE00  F031         	lfsr	0,__pbssCOMRAM
   426   00183C  0E1D               	movlw	29
   427   00183E                     clear_1:
   428   00183E  6AEE               	clrf	postinc0,c
   429   001840  06E8               	decf	wreg,f,c
   430   001842  E1FD               	bnz	clear_1
   431   001844                     end_of_initialization:
   432                           	callstack 0
   433   001844                     __end_of__initialization:
   434                           	callstack 0
   435   001844  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   436   001846  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   437   001848  0E00               	movlw	low (__Lmediumconst shr (0+16))
   438   00184A  6EF8               	movwf	tblptru,c
   439   00184C  0100               	movlb	0
   440   00184E  EF6D  F008         	goto	_main	;jump to C main() function
   441                           
   442                           	psect	bssCOMRAM
   443   000031                     __pbssCOMRAM:
   444                           	callstack 0
   445   000031                     _eusart1RxStatusBuffer:
   446                           	callstack 0
   447   000031                     	ds	8
   448   000039                     _eusart1TxBuffer:
   449                           	callstack 0
   450   000039                     	ds	8
   451   000041                     _width:
   452                           	callstack 0
   453   000041                     	ds	2
   454   000043                     _prec:
   455                           	callstack 0
   456   000043                     	ds	2
   457   000045                     _temps_timer:
   458                           	callstack 0
   459   000045                     	ds	2
   460   000047                     _flags:
   461                           	callstack 0
   462   000047                     	ds	1
   463   000048                     _eusart1RxLastError:
   464                           	callstack 0
   465   000048                     	ds	1
   466   000049                     _eusart1RxCount:
   467                           	callstack 0
   468   000049                     	ds	1
   469   00004A                     _eusart1RxTail:
   470                           	callstack 0
   471   00004A                     	ds	1
   472   00004B                     _eusart1RxHead:
   473                           	callstack 0
   474   00004B                     	ds	1
   475   00004C                     _eusart1TxTail:
   476                           	callstack 0
   477   00004C                     	ds	1
   478   00004D                     _eusart1TxHead:
   479                           	callstack 0
   480   00004D                     	ds	1
   481                           
   482                           	psect	bssBANK0
   483   000060                     __pbssBANK0:
   484                           	callstack 0
   485   000060                     	ds	32
   486   000080                     _eusart1RxBuffer:
   487                           	callstack 0
   488   000080                     	ds	8
   489                           
   490                           	psect	cstackBANK0
   491   000088                     __pcstackBANK0:
   492                           	callstack 0
   493   000088                     ??_main:
   494                           
   495                           ; 1 bytes @ 0x0
   496   000088                     	ds	2
   497   00008A                     main@onde:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x2
   501   00008A                     	ds	1
   502   00008B                     main@typeonde_recu:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x3
   506   00008B                     	ds	2
   507                           
   508                           	psect	cstackCOMRAM
   509   000001                     __pcstackCOMRAM:
   510                           	callstack 0
   511   000001                     TMR1_WriteTimer@timerVal:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x0
   515   000001                     	ds	2
   516   000003                     ??_INTERRUPT_InterruptManager:
   517   000003                     
   518                           ; 1 bytes @ 0x2
   519   000003                     	ds	4
   520   000007                     SPI_ExchangeByte@data:
   521                           	callstack 0
   522   000007                     EUSART1_Read@readValue:
   523                           	callstack 0
   524   000007                     EUSART1_Write@txData:
   525                           	callstack 0
   526   000007                     TMR1_SetInterruptHandler@InterruptHandler:
   527                           	callstack 0
   528   000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
   529                           	callstack 0
   530   000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   531                           	callstack 0
   532   000007                     EUSART1_SetErrorHandler@interruptHandler:
   533                           	callstack 0
   534   000007                     EUSART1_SetTxInterruptHandler@interruptHandler:
   535                           	callstack 0
   536   000007                     EUSART1_SetRxInterruptHandler@interruptHandler:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x6
   540   000007                     	ds	1
   541   000008                     ??_out_dig:
   542   000008                     putch@txData:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x7
   546   000008                     	ds	1
   547   000009                     ??_TMR1_Initialize:
   548   000009                     out_dig@x:
   549                           	callstack 0
   550   000009                     fputc@c:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x8
   554   000009                     	ds	1
   555   00000A                     ??_carre_60:
   556   00000A                     ??_triangle_60:
   557   00000A                     sinus_60@i:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x9
   561   00000A                     	ds	1
   562   00000B                     carre_60@i:
   563                           	callstack 0
   564   00000B                     triangle_60@i:
   565                           	callstack 0
   566   00000B                     fputc@fp:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0xA
   570   00000B                     	ds	2
   571   00000D                     ??_fputc:
   572                           
   573                           ; 1 bytes @ 0xC
   574   00000D                     	ds	5
   575   000012                     ctoa@fp:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x11
   579   000012                     	ds	2
   580   000014                     ctoa@c:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x13
   584   000014                     	ds	1
   585   000015                     ??_ctoa:
   586                           
   587                           ; 1 bytes @ 0x14
   588   000015                     	ds	1
   589   000016                     ctoa@l:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x15
   593   000016                     	ds	2
   594   000018                     ctoa@w:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x17
   598   000018                     	ds	2
   599   00001A                     vfpfcnvrt@fp:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x19
   603   00001A                     	ds	2
   604   00001C                     vfpfcnvrt@fmt:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x1B
   608   00001C                     	ds	2
   609   00001E                     vfpfcnvrt@ap:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x1D
   613   00001E                     	ds	2
   614   000020                     ??_vfpfcnvrt:
   615                           
   616                           ; 1 bytes @ 0x1F
   617   000020                     	ds	2
   618   000022                     vfpfcnvrt@c:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x21
   622   000022                     	ds	1
   623   000023                     ?_vfprintf:
   624                           	callstack 0
   625   000023                     vfprintf@fp:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x22
   629   000023                     	ds	2
   630   000025                     vfprintf@fmt:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x24
   634   000025                     	ds	2
   635   000027                     vfprintf@ap:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x26
   639   000027                     	ds	2
   640   000029                     vfprintf@cfmt:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x28
   644   000029                     	ds	2
   645   00002B                     ?_printf:
   646                           	callstack 0
   647   00002B                     printf@fmt:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x2A
   651   00002B                     	ds	4
   652   00002F                     printf@ap:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x2E
   656   00002F                     	ds	2
   657                           
   658 ;;
   659 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   660 ;;
   661 ;; *************** function _main *****************
   662 ;; Defined at:
   663 ;;		line 61 in file "main.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  tension         4    0        float 
   668 ;;  typeonde_rec    2    3[BANK0 ] int 
   669 ;;  onde            1    2[BANK0 ] enum E12606
   670 ;;  lecture         1    0        unsigned char 
   671 ;;  valeur          1    0        unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
   681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   682 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   684 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   685 ;;Total ram usage:        5 bytes
   686 ;; Hardware stack levels required when called: 11
   687 ;; This function calls:
   688 ;;		_EUSART1_Read
   689 ;;		_SYSTEM_Initialize
   690 ;;		_TMR1_SetInterruptHandler
   691 ;;		_carre_60
   692 ;;		_printf
   693 ;;		_sinus_60
   694 ;;		_triangle_60
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text0
   701   0010DA                     __ptext0:
   702                           	callstack 0
   703   0010DA                     _main:
   704                           	callstack 20
   705   0010DA                     
   706                           ;main.c: 63:     uint8_t valeur, lecture;;main.c: 64:     float tension;;main.c: 66:    
      +                           SYSTEM_Initialize();
   707   0010DA  EC5B  F00C         	call	_SYSTEM_Initialize	;wreg free
   708   0010DE                     
   709                           ;main.c: 68:     (INTCONbits.GIE = 1);
   710   0010DE  8EF2               	bsf	242,7,c	;volatile
   711   0010E0                     
   712                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   713   0010E0  8CF2               	bsf	242,6,c	;volatile
   714                           
   715                           ;main.c: 72:     TMR1_SetInterruptHandler(myTimer1_ISR);
   716   0010E2  0E84               	movlw	low _myTimer1_ISR
   717   0010E4  6E07               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   718   0010E6  0E17               	movlw	high _myTimer1_ISR
   719   0010E8  6E08               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   720   0010EA  EC7F  F00C         	call	_TMR1_SetInterruptHandler	;wreg free
   721   0010EE                     
   722                           ;main.c: 74:     SSPCON1bits.SSPEN = 1;
   723   0010EE  8AC6               	bsf	198,5,c	;volatile
   724   0010F0  8A89               	bsf	137,5,c	;volatile
   725   0010F2                     
   726                           ;main.c: 77:     forme_onde_t onde;;main.c: 79:     printf("veuiller entrer une touche "
      +                          );
   727   0010F2  0EB9               	movlw	low STR_1
   728   0010F4  6E2B               	movwf	printf@fmt^0,c
   729   0010F6  0E10               	movlw	high STR_1
   730   0010F8  6E2C               	movwf	(printf@fmt+1)^0,c
   731   0010FA  EC29  F00C         	call	_printf	;wreg free
   732   0010FE                     
   733                           ;main.c: 80:     onde=menu;
   734   0010FE  0E00               	movlw	0
   735   001100  0100               	movlb	0	; () banked
   736   001102  6F8A               	movwf	main@onde& (0+255),b
   737   001104  EFCC  F008         	goto	l2287
   738   001108                     l2263:
   739                           
   740                           ; BSR set to: 0
   741                           ;main.c: 116:                 typeonde_recu = EUSART1_Read();
   742   001108  ECBD  F00A         	call	_EUSART1_Read	;wreg free
   743   00110C  0100               	movlb	0	; () banked
   744   00110E  6F88               	movwf	??_main& (0+255),b
   745   001110  5188               	movf	??_main& (0+255),w,b
   746   001112  6F8B               	movwf	main@typeonde_recu& (0+255),b
   747   001114  6B8C               	clrf	(main@typeonde_recu+1)& (0+255),b
   748   001116                     
   749                           ; BSR set to: 0
   750                           ;main.c: 117:                 printf("%c",typeonde_recu);
   751   001116  0ED5               	movlw	low STR_2
   752   001118  6E2B               	movwf	printf@fmt^0,c
   753   00111A  0E10               	movlw	high STR_2
   754   00111C  6E2C               	movwf	(printf@fmt+1)^0,c
   755   00111E  C08B  F02D         	movff	main@typeonde_recu,?_printf+2
   756   001122  C08C  F02E         	movff	main@typeonde_recu+1,?_printf+3
   757   001126  EC29  F00C         	call	_printf	;wreg free
   758   00112A                     
   759                           ;main.c: 119:                 if (typeonde_recu == 's')
   760   00112A  0E73               	movlw	115
   761   00112C  0100               	movlb	0	; () banked
   762   00112E  198B               	xorwf	main@typeonde_recu& (0+255),w,b
   763   001130  118C               	iorwf	(main@typeonde_recu+1)& (0+255),w,b
   764   001132  A4D8               	btfss	status,2,c
   765   001134  EF9E  F008         	goto	u1081
   766   001138  EFA0  F008         	goto	u1080
   767   00113C                     u1081:
   768   00113C  EFA4  F008         	goto	l2271
   769   001140                     u1080:
   770   001140                     
   771                           ; BSR set to: 0
   772                           ;main.c: 120:                 {;main.c: 121:                     onde = sinus;
   773   001140  0E01               	movlw	1
   774   001142  6F8A               	movwf	main@onde& (0+255),b
   775                           
   776                           ;main.c: 122:                 }
   777   001144  EFCC  F008         	goto	l2287
   778   001148                     l2271:
   779                           
   780                           ; BSR set to: 0
   781   001148  0E63               	movlw	99
   782   00114A  198B               	xorwf	main@typeonde_recu& (0+255),w,b
   783   00114C  118C               	iorwf	(main@typeonde_recu+1)& (0+255),w,b
   784   00114E  A4D8               	btfss	status,2,c
   785   001150  EFAC  F008         	goto	u1091
   786   001154  EFAE  F008         	goto	u1090
   787   001158                     u1091:
   788   001158  EFB2  F008         	goto	l2275
   789   00115C                     u1090:
   790   00115C                     
   791                           ; BSR set to: 0
   792                           ;main.c: 124:                 {;main.c: 125:                     onde = carre;
   793   00115C  0E02               	movlw	2
   794   00115E  6F8A               	movwf	main@onde& (0+255),b
   795                           
   796                           ;main.c: 126:                 }
   797   001160  EFCC  F008         	goto	l2287
   798   001164                     l2275:
   799                           
   800                           ; BSR set to: 0
   801   001164  0E74               	movlw	116
   802   001166  198B               	xorwf	main@typeonde_recu& (0+255),w,b
   803   001168  118C               	iorwf	(main@typeonde_recu+1)& (0+255),w,b
   804   00116A  A4D8               	btfss	status,2,c
   805   00116C  EFBA  F008         	goto	u1101
   806   001170  EFBC  F008         	goto	u1100
   807   001174                     u1101:
   808   001174  EFC0  F008         	goto	l401
   809   001178                     u1100:
   810   001178                     
   811                           ; BSR set to: 0
   812                           ;main.c: 128:                 {;main.c: 129:                     onde = triangulaire;
   813   001178  0E03               	movlw	3
   814   00117A  6F8A               	movwf	main@onde& (0+255),b
   815                           
   816                           ;main.c: 130:                 }
   817   00117C  EFCC  F008         	goto	l2287
   818   001180                     l401:
   819                           
   820                           ; BSR set to: 0
   821                           ;main.c: 136:                 break;
   822   001180  EFCC  F008         	goto	l2287
   823   001184                     l2279:
   824                           
   825                           ; BSR set to: 0
   826                           ;main.c: 138:                 sinus_60();
   827   001184  EC8A  F00B         	call	_sinus_60	;wreg free
   828                           
   829                           ;main.c: 139:                 break;
   830   001188  EFCC  F008         	goto	l2287
   831   00118C                     l2281:
   832                           
   833                           ; BSR set to: 0
   834                           ;main.c: 141:                 carre_60();
   835   00118C  EC2C  F00B         	call	_carre_60	;wreg free
   836                           
   837                           ;main.c: 142:                 break;
   838   001190  EFCC  F008         	goto	l2287
   839   001194                     l2283:
   840                           
   841                           ; BSR set to: 0
   842                           ;main.c: 144:                 triangle_60();
   843   001194  EC0C  F00B         	call	_triangle_60	;wreg free
   844   001198                     l2287:
   845   001198  0100               	movlb	0	; () banked
   846   00119A  518A               	movf	main@onde& (0+255),w,b
   847   00119C  6F88               	movwf	??_main& (0+255),b
   848   00119E  6B89               	clrf	(??_main+1)& (0+255),b
   849                           
   850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   851                           ; Switch size 1, requested type "simple"
   852                           ; Number of cases is 1, Range of values is 0 to 0
   853                           ; switch strategies available:
   854                           ; Name         Instructions Cycles
   855                           ; simple_byte            4     3 (average)
   856                           ;	Chosen strategy is simple_byte
   857   0011A0  5189               	movf	(??_main+1)& (0+255),w,b
   858   0011A2  0A00               	xorlw	0	; case 0
   859   0011A4  B4D8               	btfsc	status,2,c
   860   0011A6  EFD7  F008         	goto	l2313
   861   0011AA  EFCC  F008         	goto	l2287
   862   0011AE                     l2313:
   863                           
   864                           ; BSR set to: 0
   865                           ; Switch size 1, requested type "simple"
   866                           ; Number of cases is 4, Range of values is 0 to 3
   867                           ; switch strategies available:
   868                           ; Name         Instructions Cycles
   869                           ; simple_byte           13     7 (average)
   870                           ;	Chosen strategy is simple_byte
   871   0011AE  5188               	movf	??_main& (0+255),w,b
   872   0011B0  0A00               	xorlw	0	; case 0
   873   0011B2  B4D8               	btfsc	status,2,c
   874   0011B4  EF84  F008         	goto	l2263
   875   0011B8  0A01               	xorlw	1	; case 1
   876   0011BA  B4D8               	btfsc	status,2,c
   877   0011BC  EFC2  F008         	goto	l2279
   878   0011C0  0A03               	xorlw	3	; case 2
   879   0011C2  B4D8               	btfsc	status,2,c
   880   0011C4  EFC6  F008         	goto	l2281
   881   0011C8  0A01               	xorlw	1	; case 3
   882   0011CA  B4D8               	btfsc	status,2,c
   883   0011CC  EFCA  F008         	goto	l2283
   884   0011D0  EFCC  F008         	goto	l2287
   885   0011D4  EF6A  F000         	goto	start
   886   0011D8                     __end_of_main:
   887                           	callstack 0
   888                           
   889 ;; *************** function _triangle_60 *****************
   890 ;; Defined at:
   891 ;;		line 189 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  i               1   10[COMRAM] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
   905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   909 ;;Total ram usage:        2 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 6
   912 ;; This function calls:
   913 ;;		_out_dig
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text1
   920   001618                     __ptext1:
   921                           	callstack 0
   922   001618                     _triangle_60:
   923                           	callstack 24
   924   001618                     l435:
   925   001618                     
   926                           ;main.c: 193:         for (i=0;i<60;i++)
   927   001618  0E00               	movlw	0
   928   00161A  6E0B               	movwf	triangle_60@i^0,c
   929   00161C                     l2223:
   930                           
   931                           ;main.c: 194:         {;main.c: 195:             out_dig(tri[i]);
   932   00161C  0E01               	movlw	low _tri
   933   00161E  240B               	addwf	triangle_60@i^0,w,c
   934   001620  6EF6               	movwf	tblptrl,c
   935   001622  6AF7               	clrf	tblptrh,c
   936   001624  0E10               	movlw	high _tri
   937   001626  22F7               	addwfc	tblptrh,f,c
   938   001628                     	if	0	;There are less than 3 active tblptr bytes
   939   001628                     	endif
   940   001628  0008               	tblrd		*
   941   00162A  50F5               	movf	tablat,w,c
   942   00162C  EC3C  F00C         	call	_out_dig
   943   001630                     
   944                           ;main.c: 196:    _delay((unsigned long)((1)*(20000000/4000.0)));
   945   001630  0E07               	movlw	7
   946   001632  6E0A               	movwf	??_triangle_60^0,c
   947   001634  0E7D               	movlw	125
   948   001636                     u1117:
   949   001636  2EE8               	decfsz	wreg,f,c
   950   001638  D7FE               	bra	u1117
   951   00163A  2E0A               	decfsz	??_triangle_60^0,f,c
   952   00163C  D7FC               	bra	u1117
   953   00163E  F000               	nop	
   954   001640                     
   955                           ;main.c: 197:         }
   956   001640  2A0B               	incf	triangle_60@i^0,f,c
   957   001642  0E3B               	movlw	59
   958   001644  640B               	cpfsgt	triangle_60@i^0,c
   959   001646  EF27  F00B         	goto	u1051
   960   00164A  EF29  F00B         	goto	u1050
   961   00164E                     u1051:
   962   00164E  EF0E  F00B         	goto	l2223
   963   001652                     u1050:
   964   001652  EF0C  F00B         	goto	l435
   965   001656  0012               	return		;funcret
   966   001658                     __end_of_triangle_60:
   967                           	callstack 0
   968                           
   969 ;; *************** function _sinus_60 *****************
   970 ;; Defined at:
   971 ;;		line 163 in file "main.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  i               1    9[COMRAM] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
   985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   989 ;;Total ram usage:        1 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 6
   992 ;; This function calls:
   993 ;;		_out_dig
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text2
  1000   001714                     __ptext2:
  1001                           	callstack 0
  1002   001714                     _sinus_60:
  1003                           	callstack 24
  1004   001714                     
  1005                           ;main.c: 164:     uint8_t i;;main.c: 165:     temps_timer = 0;
  1006   001714  0E00               	movlw	0
  1007   001716  6E46               	movwf	(_temps_timer+1)^0,c
  1008   001718  0E00               	movlw	0
  1009   00171A  6E45               	movwf	_temps_timer^0,c
  1010   00171C                     l419:
  1011                           
  1012                           ;main.c: 167:     {;main.c: 170:         for (i=0;i<60;i++)
  1013   00171C  0E00               	movlw	0
  1014   00171E  6E0A               	movwf	sinus_60@i^0,c
  1015   001720                     l2197:
  1016                           
  1017                           ;main.c: 171:         {;main.c: 173:             out_dig(sin[i]);
  1018   001720  0E79               	movlw	low _sin
  1019   001722  240A               	addwf	sinus_60@i^0,w,c
  1020   001724  6EF6               	movwf	tblptrl,c
  1021   001726  6AF7               	clrf	tblptrh,c
  1022   001728  0E10               	movlw	high _sin
  1023   00172A  22F7               	addwfc	tblptrh,f,c
  1024   00172C                     	if	0	;There are less than 3 active tblptr bytes
  1025   00172C                     	endif
  1026   00172C  0008               	tblrd		*
  1027   00172E  50F5               	movf	tablat,w,c
  1028   001730  EC3C  F00C         	call	_out_dig
  1029   001734                     
  1030                           ;main.c: 176:         }
  1031   001734  2A0A               	incf	sinus_60@i^0,f,c
  1032   001736  0E3B               	movlw	59
  1033   001738  640A               	cpfsgt	sinus_60@i^0,c
  1034   00173A  EFA1  F00B         	goto	u1031
  1035   00173E  EFA3  F00B         	goto	u1030
  1036   001742                     u1031:
  1037   001742  EF90  F00B         	goto	l2197
  1038   001746                     u1030:
  1039   001746  EF8E  F00B         	goto	l419
  1040   00174A  0012               	return		;funcret
  1041   00174C                     __end_of_sinus_60:
  1042                           	callstack 0
  1043                           
  1044 ;; *************** function _printf *****************
  1045 ;; Defined at:
  1046 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  fmt             2   42[COMRAM] PTR const unsigned char 
  1049 ;;		 -> STR_2(3), STR_1(28), 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  ap              2   46[COMRAM] PTR void [1]
  1052 ;;		 -> ?_printf(2), 
  1053 ;;  ret             2    0        int 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  2   42[COMRAM] int 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1066 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1067 ;;Total ram usage:        6 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 10
  1070 ;; This function calls:
  1071 ;;		_vfprintf
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text3
  1078   001852                     __ptext3:
  1079                           	callstack 0
  1080   001852                     _printf:
  1081                           	callstack 20
  1082   001852  0E2D               	movlw	low (?_printf+2)
  1083   001854  6E2F               	movwf	printf@ap^0,c
  1084   001856  0E00               	movlw	high (?_printf+2)
  1085   001858  6E30               	movwf	(printf@ap+1)^0,c
  1086   00185A  0E00               	movlw	0
  1087   00185C  6E23               	movwf	vfprintf@fp^0,c
  1088   00185E  0E00               	movlw	0
  1089   001860  6E24               	movwf	(vfprintf@fp+1)^0,c
  1090   001862  C02B  F025         	movff	printf@fmt,vfprintf@fmt
  1091   001866  C02C  F026         	movff	printf@fmt+1,vfprintf@fmt+1
  1092   00186A  0E2F               	movlw	low printf@ap
  1093   00186C  6E27               	movwf	vfprintf@ap^0,c
  1094   00186E  0E00               	movlw	high printf@ap
  1095   001870  6E28               	movwf	(vfprintf@ap+1)^0,c
  1096   001872  ECE5  F00A         	call	_vfprintf	;wreg free
  1097   001876  0012               	return		;funcret
  1098   001878                     __end_of_printf:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _vfprintf *****************
  1102 ;; Defined at:
  1103 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  1106 ;;		 -> NULL(0), 
  1107 ;;  fmt             2   36[COMRAM] PTR const unsigned char 
  1108 ;;		 -> STR_2(3), STR_1(28), 
  1109 ;;  ap              2   38[COMRAM] PTR PTR void 
  1110 ;;		 -> printf@ap(2), 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  cfmt            2   40[COMRAM] PTR unsigned char 
  1113 ;;		 -> STR_2(3), STR_1(28), 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  2   34[COMRAM] int 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1123 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1126 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;Total ram usage:        8 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 9
  1130 ;; This function calls:
  1131 ;;		_vfpfcnvrt
  1132 ;; This function is called by:
  1133 ;;		_printf
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text4
  1138   0015CA                     __ptext4:
  1139                           	callstack 0
  1140   0015CA                     _vfprintf:
  1141                           	callstack 20
  1142   0015CA                     
  1143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1144   0015CA  C025  F029         	movff	vfprintf@fmt,vfprintf@cfmt
  1145   0015CE  C026  F02A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1146                           
  1147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1148   0015D2  EFF9  F00A         	goto	l2145
  1149   0015D6                     l2143:
  1150                           
  1151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1152   0015D6  C023  F01A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1153   0015DA  C024  F01B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1154   0015DE  0E29               	movlw	low vfprintf@cfmt
  1155   0015E0  6E1C               	movwf	vfpfcnvrt@fmt^0,c
  1156   0015E2  0E00               	movlw	high vfprintf@cfmt
  1157   0015E4  6E1D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1158   0015E6  C027  F01E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1159   0015EA  C028  F01F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1160   0015EE  ECEC  F008         	call	_vfpfcnvrt	;wreg free
  1161   0015F2                     l2145:
  1162                           
  1163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1164   0015F2  C029  FFF6         	movff	vfprintf@cfmt,tblptrl
  1165   0015F6  C02A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1166   0015FA                     	if	0	;tblptru may be non-zero
  1167   0015FA                     	endif
  1168   0015FA                     	if	0	;tblptru may be non-zero
  1169   0015FA                     	endif
  1170   0015FA  0008               	tblrd		*
  1171   0015FC  50F5               	movf	tablat,w,c
  1172   0015FE  0900               	iorlw	0
  1173   001600  A4D8               	btfss	status,2,c
  1174   001602  EF05  F00B         	goto	u1001
  1175   001606  EF07  F00B         	goto	u1000
  1176   00160A                     u1001:
  1177   00160A  EFEB  F00A         	goto	l2143
  1178   00160E                     u1000:
  1179   00160E                     
  1180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1181   00160E  0E00               	movlw	0
  1182   001610  6E24               	movwf	(?_vfprintf+1)^0,c
  1183   001612  0E00               	movlw	0
  1184   001614  6E23               	movwf	?_vfprintf^0,c
  1185   001616  0012               	return		;funcret
  1186   001618                     __end_of_vfprintf:
  1187                           	callstack 0
  1188                           
  1189 ;; *************** function _vfpfcnvrt *****************
  1190 ;; Defined at:
  1191 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  1194 ;;		 -> NULL(0), 
  1195 ;;  fmt             2   27[COMRAM] PTR PTR unsigned char 
  1196 ;;		 -> vfprintf@cfmt(2), 
  1197 ;;  ap              2   29[COMRAM] PTR PTR void 
  1198 ;;		 -> printf@ap(2), 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  convarg         8    0        struct .
  1201 ;;  cp              3    0        PTR unsigned char 
  1202 ;;  i               2    0        int 
  1203 ;;  done            2    0        int 
  1204 ;;  c               1   33[COMRAM] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1214 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1217 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1218 ;;Total ram usage:        9 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 8
  1221 ;; This function calls:
  1222 ;;		_ctoa
  1223 ;;		_fputc
  1224 ;; This function is called by:
  1225 ;;		_vfprintf
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text5
  1230   0011D8                     __ptext5:
  1231                           	callstack 0
  1232   0011D8                     _vfpfcnvrt:
  1233                           	callstack 20
  1234   0011D8                     
  1235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1236   0011D8  C01C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1237   0011DC  C01D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1238   0011E0  CFDE FFF6          	movff	postinc2,tblptrl
  1239   0011E4  CFDD FFF7          	movff	postdec2,tblptrh
  1240   0011E8                     	if	0	;tblptru may be non-zero
  1241   0011E8                     	endif
  1242   0011E8                     	if	0	;tblptru may be non-zero
  1243   0011E8                     	endif
  1244   0011E8  0008               	tblrd		*
  1245   0011EA  50F5               	movf	tablat,w,c
  1246   0011EC  0A25               	xorlw	37
  1247   0011EE  A4D8               	btfss	status,2,c
  1248   0011F0  EFFC  F008         	goto	u981
  1249   0011F4  EFFE  F008         	goto	u980
  1250   0011F8                     u981:
  1251   0011F8  EF4B  F009         	goto	l2077
  1252   0011FC                     u980:
  1253   0011FC                     
  1254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1255   0011FC  C01C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1256   001200  C01D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1257   001204  2ADE               	incf	postinc2,f,c
  1258   001206  0E00               	movlw	0
  1259   001208  22DD               	addwfc	postdec2,f,c
  1260   00120A                     
  1261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1262   00120A  0E00               	movlw	0
  1263   00120C  6E42               	movwf	(_width+1)^0,c
  1264   00120E  0E00               	movlw	0
  1265   001210  6E41               	movwf	_width^0,c
  1266   001212  C041  F047         	movff	_width,_flags
  1267   001216                     
  1268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1269   001216  6843               	setf	_prec^0,c
  1270   001218  6844               	setf	(_prec+1)^0,c
  1271   00121A                     
  1272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  1273   00121A  C01C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1274   00121E  C01D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1275   001222  CFDE FFF6          	movff	postinc2,tblptrl
  1276   001226  CFDD FFF7          	movff	postdec2,tblptrh
  1277   00122A                     	if	0	;tblptru may be non-zero
  1278   00122A                     	endif
  1279   00122A                     	if	0	;tblptru may be non-zero
  1280   00122A                     	endif
  1281   00122A  0008               	tblrd		*
  1282   00122C  50F5               	movf	tablat,w,c
  1283   00122E  0A63               	xorlw	99
  1284   001230  A4D8               	btfss	status,2,c
  1285   001232  EF1D  F009         	goto	u991
  1286   001236  EF1F  F009         	goto	u990
  1287   00123A                     u991:
  1288   00123A  EF42  F009         	goto	l2073
  1289   00123E                     u990:
  1290   00123E                     
  1291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  1292   00123E  C01C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1293   001242  C01D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1294   001246  2ADE               	incf	postinc2,f,c
  1295   001248  0E00               	movlw	0
  1296   00124A  22DD               	addwfc	postdec2,f,c
  1297                           
  1298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1299   00124C  C01E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1300   001250  C01F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1301   001254  CFDF F020          	movff	indf2,??_vfpfcnvrt
  1302   001258  0E02               	movlw	2
  1303   00125A  26DE               	addwf	postinc2,f,c
  1304   00125C  CFDF F021          	movff	indf2,??_vfpfcnvrt+1
  1305   001260  0E00               	movlw	0
  1306   001262  22DD               	addwfc	postdec2,f,c
  1307   001264  C020  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1308   001268  C021  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1309   00126C  50DF               	movf	indf2,w,c
  1310   00126E  6E22               	movwf	vfpfcnvrt@c^0,c
  1311   001270                     
  1312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  1313   001270  C01A  F012         	movff	vfpfcnvrt@fp,ctoa@fp
  1314   001274  C01B  F013         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1315   001278  C022  F014         	movff	vfpfcnvrt@c,ctoa@c
  1316   00127C  ECC0  F009         	call	_ctoa	;wreg free
  1317   001280  EF5F  F009         	goto	l1171
  1318   001284                     l2073:
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1321   001284  C01C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1322   001288  C01D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1323   00128C  2ADE               	incf	postinc2,f,c
  1324   00128E  0E00               	movlw	0
  1325   001290  22DD               	addwfc	postdec2,f,c
  1326   001292  EF5F  F009         	goto	l1171
  1327   001296                     l2077:
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1330   001296  C01C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1331   00129A  C01D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1332   00129E  CFDE FFF6          	movff	postinc2,tblptrl
  1333   0012A2  CFDD FFF7          	movff	postdec2,tblptrh
  1334   0012A6                     	if	0	;tblptru may be non-zero
  1335   0012A6                     	endif
  1336   0012A6                     	if	0	;tblptru may be non-zero
  1337   0012A6                     	endif
  1338   0012A6  0008               	tblrd		*
  1339   0012A8  50F5               	movf	tablat,w,c
  1340   0012AA  6E09               	movwf	fputc@c^0,c
  1341   0012AC  6A0A               	clrf	(fputc@c+1)^0,c
  1342   0012AE  C01A  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1343   0012B2  C01B  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1344   0012B6  EC0D  F00A         	call	_fputc	;wreg free
  1345   0012BA  EF42  F009         	goto	l2073
  1346   0012BE                     l1171:
  1347   0012BE  0012               	return		;funcret
  1348   0012C0                     __end_of_vfpfcnvrt:
  1349                           	callstack 0
  1350                           
  1351 ;; *************** function _ctoa *****************
  1352 ;; Defined at:
  1353 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1356 ;;		 -> NULL(0), 
  1357 ;;  c               1   19[COMRAM] unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  w               2   23[COMRAM] int 
  1360 ;;  l               2   21[COMRAM] int 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1370 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;Total ram usage:        8 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 7
  1377 ;; This function calls:
  1378 ;;		_fputc
  1379 ;; This function is called by:
  1380 ;;		_vfpfcnvrt
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text6
  1385   001380                     __ptext6:
  1386                           	callstack 0
  1387   001380                     _ctoa:
  1388                           	callstack 20
  1389   001380                     
  1390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  1391   001380  5041               	movf	_width^0,w,c
  1392   001382  1042               	iorwf	(_width+1)^0,w,c
  1393   001384  A4D8               	btfss	status,2,c
  1394   001386  EFC7  F009         	goto	u941
  1395   00138A  EFC9  F009         	goto	u940
  1396   00138E                     u941:
  1397   00138E  EFCF  F009         	goto	l2029
  1398   001392                     u940:
  1399   001392  C041  F018         	movff	_width,ctoa@w
  1400   001396  C042  F019         	movff	_width+1,ctoa@w+1
  1401   00139A  EFD5  F009         	goto	l1158
  1402   00139E                     l2029:
  1403   00139E  0EFF               	movlw	255
  1404   0013A0  2441               	addwf	_width^0,w,c
  1405   0013A2  6E18               	movwf	ctoa@w^0,c
  1406   0013A4  0EFF               	movlw	255
  1407   0013A6  2042               	addwfc	(_width+1)^0,w,c
  1408   0013A8  6E19               	movwf	(ctoa@w+1)^0,c
  1409   0013AA                     l1158:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  1412   0013AA  BE19               	btfsc	(ctoa@w+1)^0,7,c
  1413   0013AC  EFDA  F009         	goto	u951
  1414   0013B0  EFDC  F009         	goto	u950
  1415   0013B4                     u951:
  1416   0013B4  EFDE  F009         	goto	l2033
  1417   0013B8                     u950:
  1418   0013B8  EFE2  F009         	goto	l1162
  1419   0013BC                     l2033:
  1420   0013BC  0E00               	movlw	0
  1421   0013BE  6E19               	movwf	(ctoa@w+1)^0,c
  1422   0013C0  0E00               	movlw	0
  1423   0013C2  6E18               	movwf	ctoa@w^0,c
  1424   0013C4                     l1162:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  1427   0013C4  0E00               	movlw	0
  1428   0013C6  6E17               	movwf	(ctoa@l+1)^0,c
  1429   0013C8  0E00               	movlw	0
  1430   0013CA  6E16               	movwf	ctoa@l^0,c
  1431                           
  1432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  1433   0013CC  EFF4  F009         	goto	l2039
  1434   0013D0                     l2035:
  1435                           
  1436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  1437   0013D0  0E00               	movlw	0
  1438   0013D2  6E0A               	movwf	(fputc@c+1)^0,c
  1439   0013D4  0E20               	movlw	32
  1440   0013D6  6E09               	movwf	fputc@c^0,c
  1441   0013D8  C012  F00B         	movff	ctoa@fp,fputc@fp
  1442   0013DC  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  1443   0013E0  EC0D  F00A         	call	_fputc	;wreg free
  1444   0013E4                     
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  1446   0013E4  4A16               	infsnz	ctoa@l^0,f,c
  1447   0013E6  2A17               	incf	(ctoa@l+1)^0,f,c
  1448   0013E8                     l2039:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  1451   0013E8  5018               	movf	ctoa@w^0,w,c
  1452   0013EA  5C16               	subwf	ctoa@l^0,w,c
  1453   0013EC  5017               	movf	(ctoa@l+1)^0,w,c
  1454   0013EE  0A80               	xorlw	128
  1455   0013F0  6E15               	movwf	??_ctoa^0,c
  1456   0013F2  5019               	movf	(ctoa@w+1)^0,w,c
  1457   0013F4  0A80               	xorlw	128
  1458   0013F6  5815               	subwfb	??_ctoa^0,w,c
  1459   0013F8  A0D8               	btfss	status,0,c
  1460   0013FA  EF01  F00A         	goto	u961
  1461   0013FE  EF03  F00A         	goto	u960
  1462   001402                     u961:
  1463   001402  EFE8  F009         	goto	l2035
  1464   001406                     u960:
  1465   001406                     
  1466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  1467   001406  C014  F009         	movff	ctoa@c,fputc@c
  1468   00140A  6A0A               	clrf	(fputc@c+1)^0,c
  1469   00140C  C012  F00B         	movff	ctoa@fp,fputc@fp
  1470   001410  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  1471   001414  EC0D  F00A         	call	_fputc	;wreg free
  1472   001418  0012               	return		;funcret
  1473   00141A                     __end_of_ctoa:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _fputc *****************
  1477 ;; Defined at:
  1478 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  c               2    8[COMRAM] int 
  1481 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  1482 ;;		 -> NULL(0), 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  2    8[COMRAM] int 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1496 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1497 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1498 ;;Total ram usage:        9 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 6
  1501 ;; This function calls:
  1502 ;;		_putch
  1503 ;; This function is called by:
  1504 ;;		_ctoa
  1505 ;;		_vfpfcnvrt
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text7
  1510   00141A                     __ptext7:
  1511                           	callstack 0
  1512   00141A                     _fputc:
  1513                           	callstack 21
  1514   00141A  500B               	movf	fputc@fp^0,w,c
  1515   00141C  100C               	iorwf	(fputc@fp+1)^0,w,c
  1516   00141E  B4D8               	btfsc	status,2,c
  1517   001420  EF14  F00A         	goto	u901
  1518   001424  EF16  F00A         	goto	u900
  1519   001428                     u901:
  1520   001428  EF1F  F00A         	goto	l2015
  1521   00142C                     u900:
  1522   00142C  500B               	movf	fputc@fp^0,w,c
  1523   00142E  100C               	iorwf	(fputc@fp+1)^0,w,c
  1524   001430  A4D8               	btfss	status,2,c
  1525   001432  EF1D  F00A         	goto	u911
  1526   001436  EF1F  F00A         	goto	u910
  1527   00143A                     u911:
  1528   00143A  EF24  F00A         	goto	l2017
  1529   00143E                     u910:
  1530   00143E                     l2015:
  1531   00143E  5009               	movf	fputc@c^0,w,c
  1532   001440  EC7A  F00C         	call	_putch
  1533   001444  EF57  F00A         	goto	l1189
  1534   001448                     l2017:
  1535   001448  EE20 F009          	lfsr	2,9
  1536   00144C  500B               	movf	fputc@fp^0,w,c
  1537   00144E  26D9               	addwf	fsr2l,f,c
  1538   001450  500C               	movf	(fputc@fp+1)^0,w,c
  1539   001452  22DA               	addwfc	fsr2h,f,c
  1540   001454  50DE               	movf	postinc2,w,c
  1541   001456  10DE               	iorwf	postinc2,w,c
  1542   001458  B4D8               	btfsc	status,2,c
  1543   00145A  EF31  F00A         	goto	u921
  1544   00145E  EF33  F00A         	goto	u920
  1545   001462                     u921:
  1546   001462  EF4E  F00A         	goto	l2021
  1547   001466                     u920:
  1548   001466  EE20 F009          	lfsr	2,9
  1549   00146A  500B               	movf	fputc@fp^0,w,c
  1550   00146C  26D9               	addwf	fsr2l,f,c
  1551   00146E  500C               	movf	(fputc@fp+1)^0,w,c
  1552   001470  22DA               	addwfc	fsr2h,f,c
  1553   001472  EE10 F003          	lfsr	1,3
  1554   001476  500B               	movf	fputc@fp^0,w,c
  1555   001478  26E1               	addwf	fsr1l,f,c
  1556   00147A  500C               	movf	(fputc@fp+1)^0,w,c
  1557   00147C  22E2               	addwfc	fsr1h,f,c
  1558   00147E  50DE               	movf	postinc2,w,c
  1559   001480  5CE6               	subwf	postinc1,w,c
  1560   001482  50E6               	movf	postinc1,w,c
  1561   001484  0A80               	xorlw	128
  1562   001486  6E11               	movwf	(??_fputc+4)^0,c
  1563   001488  50DE               	movf	postinc2,w,c
  1564   00148A  0A80               	xorlw	128
  1565   00148C  5811               	subwfb	(??_fputc+4)^0,w,c
  1566   00148E  B0D8               	btfsc	status,0,c
  1567   001490  EF4C  F00A         	goto	u931
  1568   001494  EF4E  F00A         	goto	u930
  1569   001498                     u931:
  1570   001498  EF57  F00A         	goto	l1189
  1571   00149C                     u930:
  1572   00149C                     l2021:
  1573   00149C  EE20 F003          	lfsr	2,3
  1574   0014A0  500B               	movf	fputc@fp^0,w,c
  1575   0014A2  26D9               	addwf	fsr2l,f,c
  1576   0014A4  500C               	movf	(fputc@fp+1)^0,w,c
  1577   0014A6  22DA               	addwfc	fsr2h,f,c
  1578   0014A8  2ADE               	incf	postinc2,f,c
  1579   0014AA  0E00               	movlw	0
  1580   0014AC  22DD               	addwfc	postdec2,f,c
  1581   0014AE                     l1189:
  1582   0014AE  0012               	return		;funcret
  1583   0014B0                     __end_of_fputc:
  1584                           	callstack 0
  1585                           
  1586 ;; *************** function _putch *****************
  1587 ;; Defined at:
  1588 ;;		line 198 in file "mcc_generated_files/eusart1.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  txData          1    wreg     unsigned char 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  txData          1    7[COMRAM] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1606 ;;Total ram usage:        1 bytes
  1607 ;; Hardware stack levels used: 1
  1608 ;; Hardware stack levels required when called: 5
  1609 ;; This function calls:
  1610 ;;		_EUSART1_Write
  1611 ;; This function is called by:
  1612 ;;		_fputc
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text8
  1617   0018F4                     __ptext8:
  1618                           	callstack 0
  1619   0018F4                     _putch:
  1620                           	callstack 21
  1621                           
  1622                           ;incstack = 0
  1623                           ;putch@txData stored from wreg
  1624   0018F4  6E08               	movwf	putch@txData^0,c
  1625   0018F6                     
  1626                           ;mcc_generated_files/eusart1.c: 198: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 199: {;mcc_generated_files/eusart1.c: 200:     EUSART1_Write(txData);
  1627   0018F6  5008               	movf	putch@txData^0,w,c
  1628   0018F8  EC92  F00A         	call	_EUSART1_Write
  1629   0018FC  0012               	return		;funcret
  1630   0018FE                     __end_of_putch:
  1631                           	callstack 0
  1632                           
  1633 ;; *************** function _EUSART1_Write *****************
  1634 ;; Defined at:
  1635 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  txData          1    wreg     unsigned char 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  txData          1    6[COMRAM] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;Total ram usage:        1 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 4
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_putch
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text9
  1664   001524                     __ptext9:
  1665                           	callstack 0
  1666   001524                     _EUSART1_Write:
  1667                           	callstack 21
  1668                           
  1669                           ;incstack = 0
  1670                           ;EUSART1_Write@txData stored from wreg
  1671   001524  6E07               	movwf	EUSART1_Write@txData^0,c
  1672   001526                     l1993:
  1673                           
  1674                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  1675   001526  5058               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  1676   001528  B4D8               	btfsc	status,2,c
  1677   00152A  EF99  F00A         	goto	u871
  1678   00152E  EF9B  F00A         	goto	u870
  1679   001532                     u871:
  1680   001532  EF93  F00A         	goto	l1993
  1681   001536                     u870:
  1682   001536                     
  1683                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  1684   001536  B89D               	btfsc	157,4,c	;volatile
  1685   001538  EFA0  F00A         	goto	u881
  1686   00153C  EFA2  F00A         	goto	u880
  1687   001540                     u881:
  1688   001540  EFA6  F00A         	goto	l305
  1689   001544                     u880:
  1690   001544                     
  1691                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  1692   001544  C007  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1693                           
  1694                           ;mcc_generated_files/eusart1.c: 182:     }
  1695   001548  EFBB  F00A         	goto	l2007
  1696   00154C                     l305:
  1697                           
  1698                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  1699   00154C  989D               	bcf	157,4,c	;volatile
  1700   00154E                     
  1701                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  1702   00154E  0E39               	movlw	low _eusart1TxBuffer
  1703   001550  244D               	addwf	_eusart1TxHead^0,w,c	;volatile
  1704   001552  6ED9               	movwf	fsr2l,c
  1705   001554  6ADA               	clrf	fsr2h,c
  1706   001556  0E00               	movlw	high _eusart1TxBuffer
  1707   001558  22DA               	addwfc	fsr2h,f,c
  1708   00155A  C007  FFDF         	movff	EUSART1_Write@txData,indf2
  1709   00155E  2A4D               	incf	_eusart1TxHead^0,f,c	;volatile
  1710   001560                     
  1711                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  1712   001560  0E07               	movlw	7
  1713   001562  644D               	cpfsgt	_eusart1TxHead^0,c	;volatile
  1714   001564  EFB6  F00A         	goto	u891
  1715   001568  EFB8  F00A         	goto	u890
  1716   00156C                     u891:
  1717   00156C  EFBA  F00A         	goto	l2005
  1718   001570                     u890:
  1719   001570                     
  1720                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  1721   001570  0E00               	movlw	0
  1722   001572  6E4D               	movwf	_eusart1TxHead^0,c	;volatile
  1723   001574                     l2005:
  1724                           
  1725                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  1726   001574  0658               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  1727   001576                     l2007:
  1728                           
  1729                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  1730   001576  889D               	bsf	157,4,c	;volatile
  1731   001578  0012               	return		;funcret
  1732   00157A                     __end_of_EUSART1_Write:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _carre_60 *****************
  1736 ;; Defined at:
  1737 ;;		line 179 in file "main.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  i               1   10[COMRAM] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1755 ;;Total ram usage:        2 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 6
  1758 ;; This function calls:
  1759 ;;		_out_dig
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text10
  1766   001658                     __ptext10:
  1767                           	callstack 0
  1768   001658                     _carre_60:
  1769                           	callstack 24
  1770   001658                     l427:
  1771   001658                     
  1772                           ;main.c: 182:         for (i=0;i<60;i++)
  1773   001658  0E00               	movlw	0
  1774   00165A  6E0B               	movwf	carre_60@i^0,c
  1775   00165C                     l2209:
  1776                           
  1777                           ;main.c: 183:         {;main.c: 184:             out_dig(car[i]);
  1778   00165C  0E3D               	movlw	low _car
  1779   00165E  240B               	addwf	carre_60@i^0,w,c
  1780   001660  6EF6               	movwf	tblptrl,c
  1781   001662  6AF7               	clrf	tblptrh,c
  1782   001664  0E10               	movlw	high _car
  1783   001666  22F7               	addwfc	tblptrh,f,c
  1784   001668                     	if	0	;There are less than 3 active tblptr bytes
  1785   001668                     	endif
  1786   001668  0008               	tblrd		*
  1787   00166A  50F5               	movf	tablat,w,c
  1788   00166C  EC3C  F00C         	call	_out_dig
  1789   001670                     
  1790                           ;main.c: 185:    _delay((unsigned long)((1)*(20000000/4000.0)));
  1791   001670  0E07               	movlw	7
  1792   001672  6E0A               	movwf	??_carre_60^0,c
  1793   001674  0E7D               	movlw	125
  1794   001676                     u1127:
  1795   001676  2EE8               	decfsz	wreg,f,c
  1796   001678  D7FE               	bra	u1127
  1797   00167A  2E0A               	decfsz	??_carre_60^0,f,c
  1798   00167C  D7FC               	bra	u1127
  1799   00167E  F000               	nop	
  1800   001680                     
  1801                           ;main.c: 186:         }
  1802   001680  2A0B               	incf	carre_60@i^0,f,c
  1803   001682  0E3B               	movlw	59
  1804   001684  640B               	cpfsgt	carre_60@i^0,c
  1805   001686  EF47  F00B         	goto	u1041
  1806   00168A  EF49  F00B         	goto	u1040
  1807   00168E                     u1041:
  1808   00168E  EF2E  F00B         	goto	l2209
  1809   001692                     u1040:
  1810   001692  EF2C  F00B         	goto	l427
  1811   001696  0012               	return		;funcret
  1812   001698                     __end_of_carre_60:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _out_dig *****************
  1816 ;; Defined at:
  1817 ;;		line 205 in file "main.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  x               1    wreg     unsigned char 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  x               1    8[COMRAM] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1835 ;;Total ram usage:        2 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 5
  1838 ;; This function calls:
  1839 ;;		_SPI_ExchangeByte
  1840 ;; This function is called by:
  1841 ;;		_sinus_60
  1842 ;;		_carre_60
  1843 ;;		_triangle_60
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text11
  1848   001878                     __ptext11:
  1849                           	callstack 0
  1850   001878                     _out_dig:
  1851                           	callstack 24
  1852                           
  1853                           ;incstack = 0
  1854                           ;out_dig@x stored from wreg
  1855   001878  6E09               	movwf	out_dig@x^0,c
  1856   00187A  9A89               	bcf	137,5,c	;volatile
  1857   00187C                     
  1858                           ;main.c: 208:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1859   00187C  0E07               	movlw	7
  1860   00187E  6E08               	movwf	??_out_dig^0,c
  1861   001880  0E7D               	movlw	125
  1862   001882                     u1137:
  1863   001882  2EE8               	decfsz	wreg,f,c
  1864   001884  D7FE               	bra	u1137
  1865   001886  2E08               	decfsz	??_out_dig^0,f,c
  1866   001888  D7FC               	bra	u1137
  1867   00188A  F000               	nop	
  1868   00188C                     
  1869                           ;main.c: 209:     SPI_ExchangeByte(0x11);
  1870   00188C  0E11               	movlw	17
  1871   00188E  EC4E  F00C         	call	_SPI_ExchangeByte
  1872   001892                     
  1873                           ;main.c: 210:  SPI_ExchangeByte(x);
  1874   001892  5009               	movf	out_dig@x^0,w,c
  1875   001894  EC4E  F00C         	call	_SPI_ExchangeByte
  1876   001898  8A89               	bsf	137,5,c	;volatile
  1877   00189A  0012               	return		;funcret
  1878   00189C                     __end_of_out_dig:
  1879                           	callstack 0
  1880                           
  1881 ;; *************** function _SPI_ExchangeByte *****************
  1882 ;; Defined at:
  1883 ;;		line 92 in file "mcc_generated_files/spi.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  data            1    wreg     unsigned char 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  data            1    6[COMRAM] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      unsigned char 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1901 ;;Total ram usage:        1 bytes
  1902 ;; Hardware stack levels used: 1
  1903 ;; Hardware stack levels required when called: 4
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_out_dig
  1908 ;;		_SPI_WriteBlock
  1909 ;;		_SPI_ReadBlock
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text12
  1914   00189C                     __ptext12:
  1915                           	callstack 0
  1916   00189C                     _SPI_ExchangeByte:
  1917                           	callstack 24
  1918                           
  1919                           ;incstack = 0
  1920                           ;SPI_ExchangeByte@data stored from wreg
  1921   00189C  6E07               	movwf	SPI_ExchangeByte@data^0,c
  1922   00189E                     
  1923                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
  1924   00189E  C007  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
  1925   0018A2                     l85:
  1926   0018A2  A69E               	btfss	158,3,c	;volatile
  1927   0018A4  EF56  F00C         	goto	u971
  1928   0018A8  EF58  F00C         	goto	u970
  1929   0018AC                     u971:
  1930   0018AC  EF51  F00C         	goto	l85
  1931   0018B0                     u970:
  1932   0018B0                     
  1933                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
  1934   0018B0  969E               	bcf	158,3,c	;volatile
  1935                           
  1936                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
  1937   0018B2  50C9               	movf	201,w,c	;volatile
  1938   0018B4  0012               	return		;funcret
  1939   0018B6                     __end_of_SPI_ExchangeByte:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _SYSTEM_Initialize *****************
  1943 ;; Defined at:
  1944 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 6
  1965 ;; This function calls:
  1966 ;;		_EUSART1_Initialize
  1967 ;;		_INTERRUPT_Initialize
  1968 ;;		_OSCILLATOR_Initialize
  1969 ;;		_PIN_MANAGER_Initialize
  1970 ;;		_SPI_Initialize
  1971 ;;		_TMR1_Initialize
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text13
  1978   0018B6                     __ptext13:
  1979                           	callstack 0
  1980   0018B6                     _SYSTEM_Initialize:
  1981                           	callstack 24
  1982   0018B6                     
  1983                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1984   0018B6  ECA3  F00C         	call	_INTERRUPT_Initialize	;wreg free
  1985   0018BA                     
  1986                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
  1987   0018BA  EC68  F00C         	call	_SPI_Initialize	;wreg free
  1988   0018BE                     
  1989                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  1990   0018BE  ECD8  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  1991   0018C2                     
  1992                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  1993   0018C2  EC71  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  1994   0018C6                     
  1995                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  1996   0018C6  ECA6  F00B         	call	_TMR1_Initialize	;wreg free
  1997   0018CA                     
  1998                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  1999   0018CA  EC58  F00A         	call	_EUSART1_Initialize	;wreg free
  2000   0018CE  0012               	return		;funcret
  2001   0018D0                     __end_of_SYSTEM_Initialize:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _TMR1_Initialize *****************
  2005 ;; Defined at:
  2006 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2024 ;;Total ram usage:        2 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 5
  2027 ;; This function calls:
  2028 ;;		_TMR1_SetInterruptHandler
  2029 ;; This function is called by:
  2030 ;;		_SYSTEM_Initialize
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text14
  2035   00174C                     __ptext14:
  2036                           	callstack 0
  2037   00174C                     _TMR1_Initialize:
  2038                           	callstack 24
  2039   00174C                     
  2040                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  2041   00174C  0E00               	movlw	0
  2042   00174E  6EAA               	movwf	170,c	;volatile
  2043                           
  2044                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
  2045   001750  0E00               	movlw	0
  2046   001752  6ECF               	movwf	207,c	;volatile
  2047                           
  2048                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  2049   001754  0E00               	movlw	0
  2050   001756  6ECE               	movwf	206,c	;volatile
  2051   001758                     
  2052                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  2053   001758  909E               	bcf	158,0,c	;volatile
  2054   00175A                     
  2055                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2056   00175A  50CE               	movf	206,w,c	;volatile
  2057   00175C  CFCF F009          	movff	4047,??_TMR1_Initialize	;volatile
  2058   001760  6A0A               	clrf	(??_TMR1_Initialize+1)^0,c
  2059   001762  C009  F00A         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2060   001766  6A09               	clrf	??_TMR1_Initialize^0,c
  2061   001768  1009               	iorwf	??_TMR1_Initialize^0,w,c
  2062   00176A  6E52               	movwf	_timer1ReloadVal^0,c	;volatile
  2063   00176C  500A               	movf	(??_TMR1_Initialize+1)^0,w,c
  2064   00176E  6E53               	movwf	(_timer1ReloadVal+1)^0,c	;volatile
  2065   001770                     
  2066                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  2067   001770  809D               	bsf	157,0,c	;volatile
  2068   001772                     
  2069                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  2070   001772  0E4A               	movlw	low _TMR1_DefaultInterruptHandler
  2071   001774  6E07               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  2072   001776  0E19               	movlw	high _TMR1_DefaultInterruptHandler
  2073   001778  6E08               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  2074   00177A  EC7F  F00C         	call	_TMR1_SetInterruptHandler	;wreg free
  2075   00177E                     
  2076                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  2077   00177E  0E01               	movlw	1
  2078   001780  6ECD               	movwf	205,c	;volatile
  2079   001782  0012               	return		;funcret
  2080   001784                     __end_of_TMR1_Initialize:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _TMR1_SetInterruptHandler *****************
  2084 ;; Defined at:
  2085 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  2088 ;;		 -> myTimer1_ISR(1), TMR1_DefaultInterruptHandler(1), 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;Total ram usage:        2 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 4
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_TMR1_Initialize
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text15
  2116   0018FE                     __ptext15:
  2117                           	callstack 0
  2118   0018FE                     _TMR1_SetInterruptHandler:
  2119                           	callstack 26
  2120   0018FE                     
  2121                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  2122   0018FE  C007  F050         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2123   001902  C008  F051         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2124   001906  0012               	return		;funcret
  2125   001908                     __end_of_TMR1_SetInterruptHandler:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _SPI_Initialize *****************
  2129 ;; Defined at:
  2130 ;;		line 62 in file "mcc_generated_files/spi.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2148 ;;Total ram usage:        0 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 4
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_SYSTEM_Initialize
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text16
  2159   0018D0                     __ptext16:
  2160                           	callstack 0
  2161   0018D0                     _SPI_Initialize:
  2162                           	callstack 25
  2163   0018D0                     
  2164                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
  2165   0018D0  0E40               	movlw	64
  2166   0018D2  6EC7               	movwf	199,c	;volatile
  2167                           
  2168                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
  2169   0018D4  0E00               	movlw	0
  2170   0018D6  6EC6               	movwf	198,c	;volatile
  2171                           
  2172                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
  2173   0018D8  0E01               	movlw	1
  2174   0018DA  6EC8               	movwf	200,c	;volatile
  2175   0018DC                     
  2176                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
  2177   0018DC  9694               	bcf	148,3,c	;volatile
  2178   0018DE                     
  2179                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
  2180   0018DE  9AC6               	bcf	198,5,c	;volatile
  2181   0018E0  0012               	return		;funcret
  2182   0018E2                     __end_of_SPI_Initialize:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _PIN_MANAGER_Initialize *****************
  2186 ;; Defined at:
  2187 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 4
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_SYSTEM_Initialize
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text17
  2216   0017B0                     __ptext17:
  2217                           	callstack 0
  2218   0017B0                     _PIN_MANAGER_Initialize:
  2219                           	callstack 25
  2220   0017B0                     
  2221                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2222   0017B0  0E00               	movlw	0
  2223   0017B2  6E89               	movwf	137,c	;volatile
  2224                           
  2225                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2226   0017B4  0E00               	movlw	0
  2227   0017B6  6E8A               	movwf	138,c	;volatile
  2228                           
  2229                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2230   0017B8  0E00               	movlw	0
  2231   0017BA  6E8B               	movwf	139,c	;volatile
  2232                           
  2233                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xCF;
  2234   0017BC  0ECF               	movlw	207
  2235   0017BE  6E92               	movwf	146,c	;volatile
  2236                           
  2237                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  2238   0017C0  0EDF               	movlw	223
  2239   0017C2  6E93               	movwf	147,c	;volatile
  2240                           
  2241                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x97;
  2242   0017C4  0E97               	movlw	151
  2243   0017C6  6E94               	movwf	148,c	;volatile
  2244                           
  2245                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  2246   0017C8  0E1F               	movlw	31
  2247   0017CA  010F               	movlb	15	; () banked
  2248   0017CC  6F5D               	movwf	93,b	;volatile
  2249                           
  2250                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x07;
  2251   0017CE  0E07               	movlw	7
  2252   0017D0  6F5C               	movwf	92,b	;volatile
  2253                           
  2254                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  2255   0017D2  0E00               	movlw	0
  2256   0017D4  6F5B               	movwf	91,b	;volatile
  2257   0017D6                     
  2258                           ; BSR set to: 15
  2259                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  2260   0017D6  8EF1               	bsf	241,7,c	;volatile
  2261   0017D8                     
  2262                           ; BSR set to: 15
  2263   0017D8  0012               	return		;funcret
  2264   0017DA                     __end_of_PIN_MANAGER_Initialize:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _OSCILLATOR_Initialize *****************
  2268 ;; Defined at:
  2269 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;Total ram usage:        0 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 4
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_SYSTEM_Initialize
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text18
  2298   0018E2                     __ptext18:
  2299                           	callstack 0
  2300   0018E2                     _OSCILLATOR_Initialize:
  2301                           	callstack 25
  2302   0018E2                     
  2303                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2304   0018E2  0E70               	movlw	112
  2305   0018E4  6ED3               	movwf	211,c	;volatile
  2306                           
  2307                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
  2308   0018E6  0E00               	movlw	0
  2309   0018E8  6ED2               	movwf	210,c	;volatile
  2310                           
  2311                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  2312   0018EA  0E00               	movlw	0
  2313   0018EC  6E9B               	movwf	155,c	;volatile
  2314                           
  2315                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
  2316   0018EE  0E00               	movlw	0
  2317   0018F0  6E9A               	movwf	154,c	;volatile
  2318   0018F2  0012               	return		;funcret
  2319   0018F4                     __end_of_OSCILLATOR_Initialize:
  2320                           	callstack 0
  2321                           
  2322 ;; *************** function _INTERRUPT_Initialize *****************
  2323 ;; Defined at:
  2324 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		None
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 4
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_SYSTEM_Initialize
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text19
  2353   001946                     __ptext19:
  2354                           	callstack 0
  2355   001946                     _INTERRUPT_Initialize:
  2356                           	callstack 25
  2357   001946                     
  2358                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2359   001946  9ED0               	bcf	208,7,c	;volatile
  2360   001948  0012               	return		;funcret
  2361   00194A                     __end_of_INTERRUPT_Initialize:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function _EUSART1_Initialize *****************
  2365 ;; Defined at:
  2366 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 5
  2387 ;; This function calls:
  2388 ;;		_EUSART1_SetErrorHandler
  2389 ;;		_EUSART1_SetFramingErrorHandler
  2390 ;;		_EUSART1_SetOverrunErrorHandler
  2391 ;;		_EUSART1_SetRxInterruptHandler
  2392 ;;		_EUSART1_SetTxInterruptHandler
  2393 ;; This function is called by:
  2394 ;;		_SYSTEM_Initialize
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text20
  2399   0014B0                     __ptext20:
  2400                           	callstack 0
  2401   0014B0                     _EUSART1_Initialize:
  2402                           	callstack 24
  2403   0014B0                     
  2404                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  2405   0014B0  9A9D               	bcf	157,5,c	;volatile
  2406   0014B2                     
  2407                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2408   0014B2  0EC0               	movlw	low _EUSART1_Receive_ISR
  2409   0014B4  6E07               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2410   0014B6  0E12               	movlw	high _EUSART1_Receive_ISR
  2411   0014B8  6E08               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2412   0014BA  EC89  F00C         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2413   0014BE                     
  2414                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  2415   0014BE  989D               	bcf	157,4,c	;volatile
  2416                           
  2417                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2418   0014C0  0E98               	movlw	low _EUSART1_Transmit_ISR
  2419   0014C2  6E07               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2420   0014C4  0E16               	movlw	high _EUSART1_Transmit_ISR
  2421   0014C6  6E08               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2422   0014C8  EC84  F00C         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2423   0014CC                     
  2424                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  2425   0014CC  0E08               	movlw	8
  2426   0014CE  6EA7               	movwf	167,c	;volatile
  2427   0014D0                     
  2428                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  2429   0014D0  0E90               	movlw	144
  2430   0014D2  6EAB               	movwf	171,c	;volatile
  2431   0014D4                     
  2432                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  2433   0014D4  0E24               	movlw	36
  2434   0014D6  6EAC               	movwf	172,c	;volatile
  2435   0014D8                     
  2436                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x08;
  2437   0014D8  0E08               	movlw	8
  2438   0014DA  6EAF               	movwf	175,c	;volatile
  2439   0014DC                     
  2440                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x02;
  2441   0014DC  0E02               	movlw	2
  2442   0014DE  6E7D               	movwf	125,c	;volatile
  2443   0014E0                     
  2444                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2445   0014E0  0E4C               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2446   0014E2  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2447   0014E4  0E19               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2448   0014E6  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2449   0014E8  EC93  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2450   0014EC                     
  2451                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2452   0014EC  0E3A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2453   0014EE  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2454   0014F0  0E19               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2455   0014F2  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2456   0014F4  EC8E  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2457   0014F8                     
  2458                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2459   0014F8  0E40               	movlw	low _EUSART1_DefaultErrorHandler
  2460   0014FA  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2461   0014FC  0E19               	movlw	high _EUSART1_DefaultErrorHandler
  2462   0014FE  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2463   001500  EC98  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  2464                           
  2465                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2466   001504  0E00               	movlw	0
  2467   001506  6E48               	movwf	_eusart1RxLastError^0,c	;volatile
  2468                           
  2469                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2470   001508  0E00               	movlw	0
  2471   00150A  6E4D               	movwf	_eusart1TxHead^0,c	;volatile
  2472                           
  2473                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2474   00150C  0E00               	movlw	0
  2475   00150E  6E4C               	movwf	_eusart1TxTail^0,c	;volatile
  2476                           
  2477                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2478   001510  0E08               	movlw	8
  2479   001512  6E58               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  2480                           
  2481                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2482   001514  0E00               	movlw	0
  2483   001516  6E4B               	movwf	_eusart1RxHead^0,c	;volatile
  2484                           
  2485                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2486   001518  0E00               	movlw	0
  2487   00151A  6E4A               	movwf	_eusart1RxTail^0,c	;volatile
  2488                           
  2489                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2490   00151C  0E00               	movlw	0
  2491   00151E  6E49               	movwf	_eusart1RxCount^0,c	;volatile
  2492   001520                     
  2493                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  2494   001520  8A9D               	bsf	157,5,c	;volatile
  2495   001522  0012               	return		;funcret
  2496   001524                     __end_of_EUSART1_Initialize:
  2497                           	callstack 0
  2498                           
  2499 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2500 ;; Defined at:
  2501 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  2504 ;;		 -> EUSART1_Transmit_ISR(1), 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 4
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_EUSART1_Initialize
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text21
  2531   001908                     __ptext21:
  2532                           	callstack 0
  2533   001908                     _EUSART1_SetTxInterruptHandler:
  2534                           	callstack 24
  2535   001908                     
  2536                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2537   001908  C007  F056         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2538   00190C  C008  F057         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2539   001910  0012               	return		;funcret
  2540   001912                     __end_of_EUSART1_SetTxInterruptHandler:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2544 ;; Defined at:
  2545 ;;		line 286 in file "mcc_generated_files/eusart1.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  2548 ;;		 -> EUSART1_Receive_ISR(1), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;Total ram usage:        2 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 4
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_EUSART1_Initialize
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text22
  2575   001912                     __ptext22:
  2576                           	callstack 0
  2577   001912                     _EUSART1_SetRxInterruptHandler:
  2578                           	callstack 24
  2579   001912                     
  2580                           ;mcc_generated_files/eusart1.c: 287:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2581   001912  C007  F054         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2582   001916  C008  F055         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2583   00191A  0012               	return		;funcret
  2584   00191C                     __end_of_EUSART1_SetRxInterruptHandler:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2588 ;; Defined at:
  2589 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  2592 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;Total ram usage:        2 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 4
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_EUSART1_Initialize
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text23
  2619   00191C                     __ptext23:
  2620                           	callstack 0
  2621   00191C                     _EUSART1_SetOverrunErrorHandler:
  2622                           	callstack 24
  2623   00191C                     
  2624                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_OverrunErrorHandler = interruptHandler;
  2625   00191C  C007  F08F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2626   001920  C008  F090         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2627   001924  0012               	return		;funcret
  2628   001926                     __end_of_EUSART1_SetOverrunErrorHandler:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2632 ;; Defined at:
  2633 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  2636 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2652 ;;Total ram usage:        2 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 4
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_EUSART1_Initialize
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text24
  2663   001926                     __ptext24:
  2664                           	callstack 0
  2665   001926                     _EUSART1_SetFramingErrorHandler:
  2666                           	callstack 24
  2667   001926                     
  2668                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_FramingErrorHandler = interruptHandler;
  2669   001926  C007  F04E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2670   00192A  C008  F04F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2671   00192E  0012               	return		;funcret
  2672   001930                     __end_of_EUSART1_SetFramingErrorHandler:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _EUSART1_SetErrorHandler *****************
  2676 ;; Defined at:
  2677 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  2680 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;Total ram usage:        2 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 4
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_EUSART1_Initialize
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text25
  2707   001930                     __ptext25:
  2708                           	callstack 0
  2709   001930                     _EUSART1_SetErrorHandler:
  2710                           	callstack 24
  2711   001930                     
  2712                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_ErrorHandler = interruptHandler;
  2713   001930  C007  F08D         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2714   001934  C008  F08E         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2715   001938  0012               	return		;funcret
  2716   00193A                     __end_of_EUSART1_SetErrorHandler:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function _EUSART1_Read *****************
  2720 ;; Defined at:
  2721 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  readValue       1    6[COMRAM] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      unsigned char 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;Total ram usage:        1 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 4
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text26
  2750   00157A                     __ptext26:
  2751                           	callstack 0
  2752   00157A                     _EUSART1_Read:
  2753                           	callstack 26
  2754   00157A                     l2165:
  2755                           
  2756                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  2757   00157A  5049               	movf	_eusart1RxCount^0,w,c	;volatile
  2758   00157C  B4D8               	btfsc	status,2,c
  2759   00157E  EFC3  F00A         	goto	u1011
  2760   001582  EFC5  F00A         	goto	u1010
  2761   001586                     u1011:
  2762   001586  EFBD  F00A         	goto	l2165
  2763   00158A                     u1010:
  2764   00158A                     
  2765                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  2766   00158A  0E31               	movlw	low _eusart1RxStatusBuffer
  2767   00158C  244A               	addwf	_eusart1RxTail^0,w,c	;volatile
  2768   00158E  6ED9               	movwf	fsr2l,c
  2769   001590  6ADA               	clrf	fsr2h,c
  2770   001592  0E00               	movlw	high _eusart1RxStatusBuffer
  2771   001594  22DA               	addwfc	fsr2h,f,c
  2772   001596  50DF               	movf	indf2,w,c
  2773   001598  6E48               	movwf	_eusart1RxLastError^0,c	;volatile
  2774                           
  2775                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  2776   00159A  0E80               	movlw	low _eusart1RxBuffer
  2777   00159C  244A               	addwf	_eusart1RxTail^0,w,c	;volatile
  2778   00159E  6ED9               	movwf	fsr2l,c
  2779   0015A0  6ADA               	clrf	fsr2h,c
  2780   0015A2  0E00               	movlw	high _eusart1RxBuffer
  2781   0015A4  22DA               	addwfc	fsr2h,f,c
  2782   0015A6  50DF               	movf	indf2,w,c
  2783   0015A8  6E07               	movwf	EUSART1_Read@readValue^0,c
  2784   0015AA  2A4A               	incf	_eusart1RxTail^0,f,c	;volatile
  2785   0015AC                     
  2786                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  2787   0015AC  0E07               	movlw	7
  2788   0015AE  644A               	cpfsgt	_eusart1RxTail^0,c	;volatile
  2789   0015B0  EFDC  F00A         	goto	u1021
  2790   0015B4  EFDE  F00A         	goto	u1020
  2791   0015B8                     u1021:
  2792   0015B8  EFE0  F00A         	goto	l2175
  2793   0015BC                     u1020:
  2794   0015BC                     
  2795                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  2796   0015BC  0E00               	movlw	0
  2797   0015BE  6E4A               	movwf	_eusart1RxTail^0,c	;volatile
  2798   0015C0                     l2175:
  2799                           
  2800                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
  2801   0015C0  9A9D               	bcf	157,5,c	;volatile
  2802   0015C2                     
  2803                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  2804   0015C2  0649               	decf	_eusart1RxCount^0,f,c	;volatile
  2805   0015C4                     
  2806                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
  2807   0015C4  8A9D               	bsf	157,5,c	;volatile
  2808   0015C6                     
  2809                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  2810   0015C6  5007               	movf	EUSART1_Read@readValue^0,w,c
  2811   0015C8  0012               	return		;funcret
  2812   0015CA                     __end_of_EUSART1_Read:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _INTERRUPT_InterruptManager *****************
  2816 ;; Defined at:
  2817 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2834 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2835 ;;Total ram usage:        4 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 3
  2838 ;; This function calls:
  2839 ;;		Absolute function
  2840 ;;		_EUSART1_Receive_ISR
  2841 ;;		_EUSART1_Transmit_ISR
  2842 ;;		_TMR1_ISR
  2843 ;; This function is called by:
  2844 ;;		Interrupt level 2
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	intcode
  2849   000008                     __pintcode:
  2850                           	callstack 0
  2851   000008                     _INTERRUPT_InterruptManager:
  2852                           	callstack 20
  2853                           
  2854                           ;incstack = 0
  2855   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2856   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  2857   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2858   000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  2859   000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  2860   00001A                     
  2861                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  2862   00001A  ACF2               	btfss	242,6,c	;volatile
  2863   00001C  EF12  F000         	goto	i2u75_41
  2864   000020  EF14  F000         	goto	i2u75_40
  2865   000024                     i2u75_41:
  2866   000024  EF60  F000         	goto	i2l145
  2867   000028                     i2u75_40:
  2868   000028                     
  2869                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  2870   000028  A89D               	btfss	157,4,c	;volatile
  2871   00002A  EF19  F000         	goto	i2u76_41
  2872   00002E  EF1B  F000         	goto	i2u76_40
  2873   000032                     i2u76_41:
  2874   000032  EF31  F000         	goto	i2l138
  2875   000036                     i2u76_40:
  2876   000036  A89E               	btfss	158,4,c	;volatile
  2877   000038  EF20  F000         	goto	i2u77_41
  2878   00003C  EF22  F000         	goto	i2u77_40
  2879   000040                     i2u77_41:
  2880   000040  EF31  F000         	goto	i2l138
  2881   000044                     i2u77_40:
  2882   000044                     
  2883                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  2884   000044  D802               	call	i2u78_48
  2885   000046  EF2F  F000         	goto	i2u78_49
  2886   00004A                     i2u78_48:
  2887   00004A  0005               	push	
  2888   00004C  6EFA               	movwf	pclath,c
  2889   00004E  5056               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  2890   000050  6EFD               	movwf	tosl,c
  2891   000052  5057               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  2892   000054  6EFE               	movwf	tosh,c
  2893   000056  50F8               	movf	tblptru,w,c
  2894   000058  6EFF               	movwf	tosu,c
  2895   00005A  50FA               	movf	pclath,w,c
  2896   00005C  0012               	return		;indir
  2897   00005E                     i2u78_49:
  2898                           
  2899                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  2900   00005E  EF60  F000         	goto	i2l145
  2901   000062                     i2l138:
  2902   000062  AA9D               	btfss	157,5,c	;volatile
  2903   000064  EF36  F000         	goto	i2u79_41
  2904   000068  EF38  F000         	goto	i2u79_40
  2905   00006C                     i2u79_41:
  2906   00006C  EF4E  F000         	goto	i2l140
  2907   000070                     i2u79_40:
  2908   000070  AA9E               	btfss	158,5,c	;volatile
  2909   000072  EF3D  F000         	goto	i2u80_41
  2910   000076  EF3F  F000         	goto	i2u80_40
  2911   00007A                     i2u80_41:
  2912   00007A  EF4E  F000         	goto	i2l140
  2913   00007E                     i2u80_40:
  2914   00007E                     
  2915                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  2916   00007E  D802               	call	i2u81_48
  2917   000080  EF4C  F000         	goto	i2u81_49
  2918   000084                     i2u81_48:
  2919   000084  0005               	push	
  2920   000086  6EFA               	movwf	pclath,c
  2921   000088  5054               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  2922   00008A  6EFD               	movwf	tosl,c
  2923   00008C  5055               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  2924   00008E  6EFE               	movwf	tosh,c
  2925   000090  50F8               	movf	tblptru,w,c
  2926   000092  6EFF               	movwf	tosu,c
  2927   000094  50FA               	movf	pclath,w,c
  2928   000096  0012               	return		;indir
  2929   000098                     i2u81_49:
  2930                           
  2931                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  2932   000098  EF60  F000         	goto	i2l145
  2933   00009C                     i2l140:
  2934   00009C  A09D               	btfss	157,0,c	;volatile
  2935   00009E  EF53  F000         	goto	i2u82_41
  2936   0000A2  EF55  F000         	goto	i2u82_40
  2937   0000A6                     i2u82_41:
  2938   0000A6  EF60  F000         	goto	i2l139
  2939   0000AA                     i2u82_40:
  2940   0000AA  A09E               	btfss	158,0,c	;volatile
  2941   0000AC  EF5A  F000         	goto	i2u83_41
  2942   0000B0  EF5C  F000         	goto	i2u83_40
  2943   0000B4                     i2u83_41:
  2944   0000B4  EF60  F000         	goto	i2l139
  2945   0000B8                     i2u83_40:
  2946   0000B8                     
  2947                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR1_ISR();
  2948   0000B8  EC6C  F00B         	call	_TMR1_ISR	;wreg free
  2949                           
  2950                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  2951   0000BC  EF60  F000         	goto	i2l145
  2952   0000C0                     i2l139:
  2953   0000C0                     i2l145:
  2954   0000C0  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  2955   0000C4  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  2956   0000C8  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2957   0000CC  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2958   0000D0  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2959   0000D2  0011               	retfie		f
  2960   0000D4                     __end_of_INTERRUPT_InterruptManager:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _TMR1_ISR *****************
  2964 ;; Defined at:
  2965 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 2
  2986 ;; This function calls:
  2987 ;;		Absolute function
  2988 ;;		_TMR1_DefaultInterruptHandler
  2989 ;;		_TMR1_WriteTimer
  2990 ;;		_myTimer1_ISR
  2991 ;; This function is called by:
  2992 ;;		_INTERRUPT_InterruptManager
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text28
  2997   0016D8                     __ptext28:
  2998                           	callstack 0
  2999   0016D8                     _TMR1_ISR:
  3000                           	callstack 20
  3001   0016D8                     
  3002                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  3003   0016D8  909E               	bcf	158,0,c	;volatile
  3004   0016DA                     
  3005                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  3006   0016DA  C052  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  3007   0016DE  C053  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  3008   0016E2  EC02  F00C         	call	_TMR1_WriteTimer	;wreg free
  3009   0016E6                     
  3010                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  3011   0016E6  5050               	movf	_TMR1_InterruptHandler^0,w,c
  3012   0016E8  1051               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  3013   0016EA  B4D8               	btfsc	status,2,c
  3014   0016EC  EF7A  F00B         	goto	i2u63_41
  3015   0016F0  EF7C  F00B         	goto	i2u63_40
  3016   0016F4                     i2u63_41:
  3017   0016F4  EF89  F00B         	goto	i2l199
  3018   0016F8                     i2u63_40:
  3019   0016F8                     
  3020                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  3021   0016F8  D802               	call	i2u64_48
  3022   0016FA  EF89  F00B         	goto	i2u64_49
  3023   0016FE                     i2u64_48:
  3024   0016FE  0005               	push	
  3025   001700  6EFA               	movwf	pclath,c
  3026   001702  5050               	movf	_TMR1_InterruptHandler^0,w,c
  3027   001704  6EFD               	movwf	tosl,c
  3028   001706  5051               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  3029   001708  6EFE               	movwf	tosh,c
  3030   00170A  50F8               	movf	tblptru,w,c
  3031   00170C  6EFF               	movwf	tosu,c
  3032   00170E  50FA               	movf	pclath,w,c
  3033   001710  0012               	return		;indir
  3034   001712                     i2u64_49:
  3035   001712                     i2l199:
  3036   001712  0012               	return		;funcret
  3037   001714                     __end_of_TMR1_ISR:
  3038                           	callstack 0
  3039                           
  3040 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3041 ;; Defined at:
  3042 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		None
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  3056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_TMR1_Initialize
  3066 ;;		_TMR1_ISR
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text29
  3071   00194A                     __ptext29:
  3072                           	callstack 0
  3073   00194A                     _TMR1_DefaultInterruptHandler:
  3074                           	callstack 21
  3075   00194A  0012               	return		;funcret
  3076   00194C                     __end_of_TMR1_DefaultInterruptHandler:
  3077                           	callstack 0
  3078                           
  3079 ;; *************** function _myTimer1_ISR *****************
  3080 ;; Defined at:
  3081 ;;		line 153 in file "main.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  3095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3099 ;;Total ram usage:        0 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; Hardware stack levels required when called: 1
  3102 ;; This function calls:
  3103 ;;		_TMR1_WriteTimer
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;;		_TMR1_ISR
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text30
  3111   001784                     __ptext30:
  3112                           	callstack 0
  3113   001784                     _myTimer1_ISR:
  3114                           	callstack 20
  3115   001784                     
  3116                           ;main.c: 155:   TMR1_WriteTimer(0xffff);
  3117   001784  0EFF               	movlw	255
  3118   001786  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  3119   001788  6801               	setf	TMR1_WriteTimer@timerVal^0,c
  3120   00178A  EC02  F00C         	call	_TMR1_WriteTimer	;wreg free
  3121   00178E                     
  3122                           ;main.c: 156:   temps_timer++;
  3123   00178E  4A45               	infsnz	_temps_timer^0,f,c
  3124   001790  2A46               	incf	(_temps_timer+1)^0,f,c
  3125   001792                     
  3126                           ;main.c: 157:   if (temps_timer == 6){temps_timer= 0;}
  3127   001792  0E06               	movlw	6
  3128   001794  1845               	xorwf	_temps_timer^0,w,c
  3129   001796  1046               	iorwf	(_temps_timer+1)^0,w,c
  3130   001798  A4D8               	btfss	status,2,c
  3131   00179A  EFD1  F00B         	goto	i2u61_41
  3132   00179E  EFD3  F00B         	goto	i2u61_40
  3133   0017A2                     i2u61_41:
  3134   0017A2  EFD7  F00B         	goto	i2l416
  3135   0017A6                     i2u61_40:
  3136   0017A6  0E00               	movlw	0
  3137   0017A8  6E46               	movwf	(_temps_timer+1)^0,c
  3138   0017AA  0E00               	movlw	0
  3139   0017AC  6E45               	movwf	_temps_timer^0,c
  3140   0017AE                     i2l416:
  3141   0017AE  0012               	return		;funcret
  3142   0017B0                     __end_of_myTimer1_ISR:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _TMR1_WriteTimer *****************
  3146 ;; Defined at:
  3147 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  timerVal        2    0[COMRAM] unsigned short 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  3161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;Total ram usage:        2 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_TMR1_ISR
  3171 ;;		_myTimer1_ISR
  3172 ;;		_TMR1_Reload
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text31
  3177   001804                     __ptext31:
  3178                           	callstack 0
  3179   001804                     _TMR1_WriteTimer:
  3180                           	callstack 20
  3181   001804                     
  3182                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  3183   001804  A4CD               	btfss	205,2,c	;volatile
  3184   001806  EF07  F00C         	goto	i2u57_41
  3185   00180A  EF09  F00C         	goto	i2u57_40
  3186   00180E                     i2u57_41:
  3187   00180E  EF11  F00C         	goto	i2l1719
  3188   001812                     i2u57_40:
  3189   001812                     
  3190                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  3191   001812  90CD               	bcf	205,0,c	;volatile
  3192   001814                     
  3193                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  3194   001814  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3195   001816  6ECF               	movwf	207,c	;volatile
  3196   001818                     
  3197                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  3198   001818  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3199   00181C                     
  3200                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  3201   00181C  80CD               	bsf	205,0,c	;volatile
  3202                           
  3203                           ;mcc_generated_files/tmr1.c: 133:     }
  3204   00181E  EF15  F00C         	goto	i2l186
  3205   001822                     i2l1719:
  3206                           
  3207                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  3208   001822  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3209   001824  6ECF               	movwf	207,c	;volatile
  3210   001826                     
  3211                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  3212   001826  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3213   00182A                     i2l186:
  3214   00182A  0012               	return		;funcret
  3215   00182C                     __end_of_TMR1_WriteTimer:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _EUSART1_Transmit_ISR *****************
  3219 ;; Defined at:
  3220 ;;		line 203 in file "mcc_generated_files/eusart1.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_EUSART1_Initialize
  3244 ;;		_INTERRUPT_InterruptManager
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text32
  3249   001698                     __ptext32:
  3250                           	callstack 0
  3251   001698                     _EUSART1_Transmit_ISR:
  3252                           	callstack 22
  3253   001698                     
  3254                           ;mcc_generated_files/eusart1.c: 207:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  3255   001698  0E08               	movlw	8
  3256   00169A  6058               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  3257   00169C  EF52  F00B         	goto	i2u67_41
  3258   0016A0  EF54  F00B         	goto	i2u67_40
  3259   0016A4                     i2u67_41:
  3260   0016A4  EF6A  F00B         	goto	i2l314
  3261   0016A8                     i2u67_40:
  3262   0016A8                     
  3263                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  3264   0016A8  0E39               	movlw	low _eusart1TxBuffer
  3265   0016AA  244C               	addwf	_eusart1TxTail^0,w,c	;volatile
  3266   0016AC  6ED9               	movwf	fsr2l,c
  3267   0016AE  6ADA               	clrf	fsr2h,c
  3268   0016B0  0E00               	movlw	high _eusart1TxBuffer
  3269   0016B2  22DA               	addwfc	fsr2h,f,c
  3270   0016B4  50DF               	movf	indf2,w,c
  3271   0016B6  6EAD               	movwf	173,c	;volatile
  3272   0016B8  2A4C               	incf	_eusart1TxTail^0,f,c	;volatile
  3273   0016BA                     
  3274                           ;mcc_generated_files/eusart1.c: 210:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  3275   0016BA  0E07               	movlw	7
  3276   0016BC  644C               	cpfsgt	_eusart1TxTail^0,c	;volatile
  3277   0016BE  EF63  F00B         	goto	i2u68_41
  3278   0016C2  EF65  F00B         	goto	i2u68_40
  3279   0016C6                     i2u68_41:
  3280   0016C6  EF67  F00B         	goto	i2l1879
  3281   0016CA                     i2u68_40:
  3282   0016CA                     
  3283                           ;mcc_generated_files/eusart1.c: 211:         {;mcc_generated_files/eusart1.c: 212:      
      +                                 eusart1TxTail = 0;
  3284   0016CA  0E00               	movlw	0
  3285   0016CC  6E4C               	movwf	_eusart1TxTail^0,c	;volatile
  3286   0016CE                     i2l1879:
  3287                           
  3288                           ;mcc_generated_files/eusart1.c: 214:         eusart1TxBufferRemaining++;
  3289   0016CE  2A58               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  3290                           
  3291                           ;mcc_generated_files/eusart1.c: 215:     }
  3292   0016D0  EF6B  F00B         	goto	i2l317
  3293   0016D4                     i2l314:
  3294                           
  3295                           ;mcc_generated_files/eusart1.c: 217:     {;mcc_generated_files/eusart1.c: 218:         P
      +                          IE1bits.TX1IE = 0;
  3296   0016D4  989D               	bcf	157,4,c	;volatile
  3297   0016D6                     i2l317:
  3298   0016D6  0012               	return		;funcret
  3299   0016D8                     __end_of_EUSART1_Transmit_ISR:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function _EUSART1_Receive_ISR *****************
  3303 ;; Defined at:
  3304 ;;		line 222 in file "mcc_generated_files/eusart1.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;		None
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  3318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3322 ;;Total ram usage:        0 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 2
  3325 ;; This function calls:
  3326 ;;		Absolute function
  3327 ;;		_EUSART1_DefaultErrorHandler
  3328 ;;		_EUSART1_DefaultFramingErrorHandler
  3329 ;;		_EUSART1_DefaultOverrunErrorHandler
  3330 ;;		_EUSART1_RxDataHandler
  3331 ;; This function is called by:
  3332 ;;		_EUSART1_Initialize
  3333 ;;		_INTERRUPT_InterruptManager
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text33
  3338   0012C0                     __ptext33:
  3339                           	callstack 0
  3340   0012C0                     _EUSART1_Receive_ISR:
  3341                           	callstack 20
  3342   0012C0                     
  3343                           ;mcc_generated_files/eusart1.c: 225:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  3344   0012C0  0E31               	movlw	low _eusart1RxStatusBuffer
  3345   0012C2  244B               	addwf	_eusart1RxHead^0,w,c	;volatile
  3346   0012C4  6ED9               	movwf	fsr2l,c
  3347   0012C6  6ADA               	clrf	fsr2h,c
  3348   0012C8  0E00               	movlw	high _eusart1RxStatusBuffer
  3349   0012CA  22DA               	addwfc	fsr2h,f,c
  3350   0012CC  0E00               	movlw	0
  3351   0012CE  6EDF               	movwf	indf2,c
  3352   0012D0                     
  3353                           ;mcc_generated_files/eusart1.c: 227:     if(RCSTA1bits.FERR){
  3354   0012D0  A4AB               	btfss	171,2,c	;volatile
  3355   0012D2  EF6D  F009         	goto	i2u69_41
  3356   0012D6  EF6F  F009         	goto	i2u69_40
  3357   0012DA                     i2u69_41:
  3358   0012DA  EF83  F009         	goto	i2l1889
  3359   0012DE                     i2u69_40:
  3360   0012DE                     
  3361                           ;mcc_generated_files/eusart1.c: 228:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  3362   0012DE  0E31               	movlw	low _eusart1RxStatusBuffer
  3363   0012E0  244B               	addwf	_eusart1RxHead^0,w,c	;volatile
  3364   0012E2  6ED9               	movwf	fsr2l,c
  3365   0012E4  6ADA               	clrf	fsr2h,c
  3366   0012E6  0E00               	movlw	high _eusart1RxStatusBuffer
  3367   0012E8  22DA               	addwfc	fsr2h,f,c
  3368   0012EA  82DF               	bsf	indf2,1,c
  3369   0012EC                     
  3370                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_FramingErrorHandler();
  3371   0012EC  D802               	call	i2u70_48
  3372   0012EE  EF83  F009         	goto	i2u70_49
  3373   0012F2                     i2u70_48:
  3374   0012F2  0005               	push	
  3375   0012F4  6EFA               	movwf	pclath,c
  3376   0012F6  504E               	movf	_EUSART1_FramingErrorHandler^0,w,c
  3377   0012F8  6EFD               	movwf	tosl,c
  3378   0012FA  504F               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  3379   0012FC  6EFE               	movwf	tosh,c
  3380   0012FE  50F8               	movf	tblptru,w,c
  3381   001300  6EFF               	movwf	tosu,c
  3382   001302  50FA               	movf	pclath,w,c
  3383   001304  0012               	return		;indir
  3384   001306                     i2u70_49:
  3385   001306                     i2l1889:
  3386                           
  3387                           ;mcc_generated_files/eusart1.c: 232:     if(RCSTA1bits.OERR){
  3388   001306  A2AB               	btfss	171,1,c	;volatile
  3389   001308  EF88  F009         	goto	i2u71_41
  3390   00130C  EF8A  F009         	goto	i2u71_40
  3391   001310                     i2u71_41:
  3392   001310  EF9F  F009         	goto	i2l1895
  3393   001314                     i2u71_40:
  3394   001314                     
  3395                           ;mcc_generated_files/eusart1.c: 233:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  3396   001314  0E31               	movlw	low _eusart1RxStatusBuffer
  3397   001316  244B               	addwf	_eusart1RxHead^0,w,c	;volatile
  3398   001318  6ED9               	movwf	fsr2l,c
  3399   00131A  6ADA               	clrf	fsr2h,c
  3400   00131C  0E00               	movlw	high _eusart1RxStatusBuffer
  3401   00131E  22DA               	addwfc	fsr2h,f,c
  3402   001320  84DF               	bsf	indf2,2,c
  3403   001322                     
  3404                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_OverrunErrorHandler();
  3405   001322  D802               	call	i2u72_48
  3406   001324  EF9F  F009         	goto	i2u72_49
  3407   001328                     i2u72_48:
  3408   001328  0005               	push	
  3409   00132A  0100               	movlb	0	; () banked
  3410   00132C  6EFA               	movwf	pclath,c
  3411   00132E  518F               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  3412   001330  6EFD               	movwf	tosl,c
  3413   001332  5190               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  3414   001334  6EFE               	movwf	tosh,c
  3415   001336  50F8               	movf	tblptru,w,c
  3416   001338  6EFF               	movwf	tosu,c
  3417   00133A  50FA               	movf	pclath,w,c
  3418   00133C  0012               	return		;indir
  3419   00133E                     i2u72_49:
  3420   00133E                     i2l1895:
  3421                           
  3422                           ;mcc_generated_files/eusart1.c: 237:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  3423   00133E  0E31               	movlw	low _eusart1RxStatusBuffer
  3424   001340  244B               	addwf	_eusart1RxHead^0,w,c	;volatile
  3425   001342  6ED9               	movwf	fsr2l,c
  3426   001344  6ADA               	clrf	fsr2h,c
  3427   001346  0E00               	movlw	high _eusart1RxStatusBuffer
  3428   001348  22DA               	addwfc	fsr2h,f,c
  3429   00134A  50DF               	movf	indf2,w,c
  3430   00134C  B4D8               	btfsc	status,2,c
  3431   00134E  EFAB  F009         	goto	i2u73_41
  3432   001352  EFAD  F009         	goto	i2u73_40
  3433   001356                     i2u73_41:
  3434   001356  EFBD  F009         	goto	i2l1899
  3435   00135A                     i2u73_40:
  3436   00135A                     
  3437                           ;mcc_generated_files/eusart1.c: 238:         EUSART1_ErrorHandler();
  3438   00135A  D802               	call	i2u74_48
  3439   00135C  EFBB  F009         	goto	i2u74_49
  3440   001360                     i2u74_48:
  3441   001360  0005               	push	
  3442   001362  0100               	movlb	0	; () banked
  3443   001364  6EFA               	movwf	pclath,c
  3444   001366  518D               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  3445   001368  6EFD               	movwf	tosl,c
  3446   00136A  518E               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  3447   00136C  6EFE               	movwf	tosh,c
  3448   00136E  50F8               	movf	tblptru,w,c
  3449   001370  6EFF               	movwf	tosu,c
  3450   001372  50FA               	movf	pclath,w,c
  3451   001374  0012               	return		;indir
  3452   001376                     i2u74_49:
  3453                           
  3454                           ;mcc_generated_files/eusart1.c: 239:     } else {
  3455   001376  EFBF  F009         	goto	i2l324
  3456   00137A                     i2l1899:
  3457                           
  3458                           ;mcc_generated_files/eusart1.c: 240:         EUSART1_RxDataHandler();
  3459   00137A  ECED  F00B         	call	_EUSART1_RxDataHandler	;wreg free
  3460   00137E                     i2l324:
  3461   00137E  0012               	return		;funcret
  3462   001380                     __end_of_EUSART1_Receive_ISR:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  3466 ;; Defined at:
  3467 ;;		line 258 in file "mcc_generated_files/eusart1.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		None
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_EUSART1_Initialize
  3491 ;;		_EUSART1_Receive_ISR
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text34
  3496   00193A                     __ptext34:
  3497                           	callstack 0
  3498   00193A                     _EUSART1_DefaultOverrunErrorHandler:
  3499                           	callstack 21
  3500   00193A                     
  3501                           ;mcc_generated_files/eusart1.c: 261:     RCSTA1bits.CREN = 0;
  3502   00193A  98AB               	bcf	171,4,c	;volatile
  3503                           
  3504                           ;mcc_generated_files/eusart1.c: 262:     RCSTA1bits.CREN = 1;
  3505   00193C  88AB               	bsf	171,4,c	;volatile
  3506   00193E  0012               	return		;funcret
  3507   001940                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  3511 ;; Defined at:
  3512 ;;		line 256 in file "mcc_generated_files/eusart1.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		None
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  3526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;Total ram usage:        0 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_EUSART1_Initialize
  3536 ;;		_EUSART1_Receive_ISR
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text35
  3541   00194C                     __ptext35:
  3542                           	callstack 0
  3543   00194C                     _EUSART1_DefaultFramingErrorHandler:
  3544                           	callstack 21
  3545   00194C  0012               	return		;funcret
  3546   00194E                     __end_of_EUSART1_DefaultFramingErrorHandler:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  3550 ;; Defined at:
  3551 ;;		line 266 in file "mcc_generated_files/eusart1.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  3565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3569 ;;Total ram usage:        0 bytes
  3570 ;; Hardware stack levels used: 1
  3571 ;; Hardware stack levels required when called: 1
  3572 ;; This function calls:
  3573 ;;		_EUSART1_RxDataHandler
  3574 ;; This function is called by:
  3575 ;;		_EUSART1_Initialize
  3576 ;;		_EUSART1_Receive_ISR
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text36
  3581   001940                     __ptext36:
  3582                           	callstack 0
  3583   001940                     _EUSART1_DefaultErrorHandler:
  3584                           	callstack 20
  3585   001940                     
  3586                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_RxDataHandler();
  3587   001940  ECED  F00B         	call	_EUSART1_RxDataHandler	;wreg free
  3588   001944  0012               	return		;funcret
  3589   001946                     __end_of_EUSART1_DefaultErrorHandler:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _EUSART1_RxDataHandler *****************
  3593 ;; Defined at:
  3594 ;;		line 246 in file "mcc_generated_files/eusart1.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3612 ;;Total ram usage:        0 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_EUSART1_Receive_ISR
  3618 ;;		_EUSART1_DefaultErrorHandler
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text37
  3623   0017DA                     __ptext37:
  3624                           	callstack 0
  3625   0017DA                     _EUSART1_RxDataHandler:
  3626                           	callstack 21
  3627   0017DA                     
  3628                           ;mcc_generated_files/eusart1.c: 248:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  3629   0017DA  0E80               	movlw	low _eusart1RxBuffer
  3630   0017DC  244B               	addwf	_eusart1RxHead^0,w,c	;volatile
  3631   0017DE  6ED9               	movwf	fsr2l,c
  3632   0017E0  6ADA               	clrf	fsr2h,c
  3633   0017E2  0E00               	movlw	high _eusart1RxBuffer
  3634   0017E4  22DA               	addwfc	fsr2h,f,c
  3635   0017E6  CFAE FFDF          	movff	4014,indf2	;volatile
  3636   0017EA  2A4B               	incf	_eusart1RxHead^0,f,c	;volatile
  3637   0017EC                     
  3638                           ;mcc_generated_files/eusart1.c: 249:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3639   0017EC  0E07               	movlw	7
  3640   0017EE  644B               	cpfsgt	_eusart1RxHead^0,c	;volatile
  3641   0017F0  EFFC  F00B         	goto	i2u58_41
  3642   0017F4  EFFE  F00B         	goto	i2u58_40
  3643   0017F8                     i2u58_41:
  3644   0017F8  EF00  F00C         	goto	i2l1741
  3645   0017FC                     i2u58_40:
  3646   0017FC                     
  3647                           ;mcc_generated_files/eusart1.c: 250:     {;mcc_generated_files/eusart1.c: 251:         e
      +                          usart1RxHead = 0;
  3648   0017FC  0E00               	movlw	0
  3649   0017FE  6E4B               	movwf	_eusart1RxHead^0,c	;volatile
  3650   001800                     i2l1741:
  3651                           
  3652                           ;mcc_generated_files/eusart1.c: 253:     eusart1RxCount++;
  3653   001800  2A49               	incf	_eusart1RxCount^0,f,c	;volatile
  3654   001802  0012               	return		;funcret
  3655   001804                     __end_of_EUSART1_RxDataHandler:
  3656                           	callstack 0
  3657                           
  3658                           	psect	text38
  3659   000000                     __ptext38:
  3660                           	callstack 0
  3661   000000                     
  3662                           	psect	rparam
  3663   000000                     
  3664                           	psect	temp
  3665   000059                     btemp:
  3666                           	callstack 0
  3667   000059                     	ds	1
  3668   000000                     int$flags	set	btemp
  3669   000000                     wtemp8	set	btemp+1
  3670   000000                     ttemp5	set	btemp+1
  3671   000000                     ttemp6	set	btemp+4
  3672   000000                     ttemp7	set	btemp+8
  3673                           
  3674                           	psect	idloc
  3675                           
  3676                           ;Config register IDLOC0 @ 0x200000
  3677                           ;	unspecified, using default values
  3678   200000                     	org	2097152
  3679   200000  FF                 	db	255
  3680                           
  3681                           ;Config register IDLOC1 @ 0x200001
  3682                           ;	unspecified, using default values
  3683   200001                     	org	2097153
  3684   200001  FF                 	db	255
  3685                           
  3686                           ;Config register IDLOC2 @ 0x200002
  3687                           ;	unspecified, using default values
  3688   200002                     	org	2097154
  3689   200002  FF                 	db	255
  3690                           
  3691                           ;Config register IDLOC3 @ 0x200003
  3692                           ;	unspecified, using default values
  3693   200003                     	org	2097155
  3694   200003  FF                 	db	255
  3695                           
  3696                           ;Config register IDLOC4 @ 0x200004
  3697                           ;	unspecified, using default values
  3698   200004                     	org	2097156
  3699   200004  FF                 	db	255
  3700                           
  3701                           ;Config register IDLOC5 @ 0x200005
  3702                           ;	unspecified, using default values
  3703   200005                     	org	2097157
  3704   200005  FF                 	db	255
  3705                           
  3706                           ;Config register IDLOC6 @ 0x200006
  3707                           ;	unspecified, using default values
  3708   200006                     	org	2097158
  3709   200006  FF                 	db	255
  3710                           
  3711                           ;Config register IDLOC7 @ 0x200007
  3712                           ;	unspecified, using default values
  3713   200007                     	org	2097159
  3714   200007  FF                 	db	255
  3715                           
  3716                           	psect	config
  3717                           
  3718                           ;Config register CONFIG1L @ 0x300000
  3719                           ;	VREG Sleep Enable bit
  3720                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  3721                           ;	LF-INTOSC Low-power Enable bit
  3722                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  3723                           ;	SOSC Power Selection and mode Configuration bits
  3724                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  3725                           ;	Extended Instruction Set
  3726                           ;	XINST = OFF, Disabled
  3727   300000                     	org	3145728
  3728   300000  15                 	db	21
  3729                           
  3730                           ;Config register CONFIG1H @ 0x300001
  3731                           ;	Oscillator
  3732                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  3733                           ;	PLL x4 Enable bit
  3734                           ;	PLLCFG = OFF, Disabled
  3735                           ;	Fail-Safe Clock Monitor
  3736                           ;	FCMEN = OFF, Disabled
  3737                           ;	Internal External Oscillator Switch Over Mode
  3738                           ;	IESO = OFF, Disabled
  3739   300001                     	org	3145729
  3740   300001  02                 	db	2
  3741                           
  3742                           ;Config register CONFIG2L @ 0x300002
  3743                           ;	Power Up Timer
  3744                           ;	PWRTEN = OFF, Disabled
  3745                           ;	Brown Out Detect
  3746                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  3747                           ;	Brown-out Reset Voltage bits
  3748                           ;	BORV = 3, 1.8V
  3749                           ;	BORMV Power level
  3750                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  3751   300002                     	org	3145730
  3752   300002  7F                 	db	127
  3753                           
  3754                           ;Config register CONFIG2H @ 0x300003
  3755                           ;	Watchdog Timer
  3756                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  3757                           ;	Watchdog Postscaler
  3758                           ;	WDTPS = 1048576, 1:1048576
  3759   300003                     	org	3145731
  3760   300003  7C                 	db	124
  3761                           
  3762                           ; Padding undefined space
  3763   300004                     	org	3145732
  3764   300004  FF                 	db	255
  3765                           
  3766                           ;Config register CONFIG3H @ 0x300005
  3767                           ;	ECAN Mux bit
  3768                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  3769                           ;	MSSP address masking
  3770                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  3771                           ;	Master Clear Enable
  3772                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  3773   300005                     	org	3145733
  3774   300005  89                 	db	137
  3775                           
  3776                           ;Config register CONFIG4L @ 0x300006
  3777                           ;	Stack Overflow Reset
  3778                           ;	STVREN = ON, Enabled
  3779                           ;	Boot Block Size
  3780                           ;	BBSIZ = BB2K, 2K word Boot Block size
  3781   300006                     	org	3145734
  3782   300006  91                 	db	145
  3783                           
  3784                           ; Padding undefined space
  3785   300007                     	org	3145735
  3786   300007  FF                 	db	255
  3787                           
  3788                           ;Config register CONFIG5L @ 0x300008
  3789                           ;	Code Protect 00800-01FFF
  3790                           ;	CP0 = OFF, Disabled
  3791                           ;	Code Protect 02000-03FFF
  3792                           ;	CP1 = OFF, Disabled
  3793                           ;	Code Protect 04000-05FFF
  3794                           ;	CP2 = OFF, Disabled
  3795                           ;	Code Protect 06000-07FFF
  3796                           ;	CP3 = OFF, Disabled
  3797   300008                     	org	3145736
  3798   300008  0F                 	db	15
  3799                           
  3800                           ;Config register CONFIG5H @ 0x300009
  3801                           ;	Code Protect Boot
  3802                           ;	CPB = OFF, Disabled
  3803                           ;	Data EE Read Protect
  3804                           ;	CPD = OFF, Disabled
  3805   300009                     	org	3145737
  3806   300009  C0                 	db	192
  3807                           
  3808                           ;Config register CONFIG6L @ 0x30000A
  3809                           ;	Table Write Protect 00800-01FFF
  3810                           ;	WRT0 = OFF, Disabled
  3811                           ;	Table Write Protect 02000-03FFF
  3812                           ;	WRT1 = OFF, Disabled
  3813                           ;	Table Write Protect 04000-05FFF
  3814                           ;	WRT2 = OFF, Disabled
  3815                           ;	Table Write Protect 06000-07FFF
  3816                           ;	WRT3 = OFF, Disabled
  3817   30000A                     	org	3145738
  3818   30000A  0F                 	db	15
  3819                           
  3820                           ;Config register CONFIG6H @ 0x30000B
  3821                           ;	Config. Write Protect
  3822                           ;	WRTC = OFF, Disabled
  3823                           ;	Table Write Protect Boot
  3824                           ;	WRTB = OFF, Disabled
  3825                           ;	Data EE Write Protect
  3826                           ;	WRTD = OFF, Disabled
  3827   30000B                     	org	3145739
  3828   30000B  E0                 	db	224
  3829                           
  3830                           ;Config register CONFIG7L @ 0x30000C
  3831                           ;	Table Read Protect 00800-01FFF
  3832                           ;	EBTR0 = OFF, Disabled
  3833                           ;	Table Read Protect 02000-03FFF
  3834                           ;	EBTR1 = OFF, Disabled
  3835                           ;	Table Read Protect 04000-05FFF
  3836                           ;	EBTR2 = OFF, Disabled
  3837                           ;	Table Read Protect 06000-07FFF
  3838                           ;	EBTR3 = OFF, Disabled
  3839   30000C                     	org	3145740
  3840   30000C  0F                 	db	15
  3841                           
  3842                           ;Config register CONFIG7H @ 0x30000D
  3843                           ;	Table Read Protect Boot
  3844                           ;	EBTRB = OFF, Disabled
  3845   30000D                     	org	3145741
  3846   30000D  40                 	db	64
  3847                           tosu	equ	0xFFF
  3848                           tosh	equ	0xFFE
  3849                           tosl	equ	0xFFD
  3850                           stkptr	equ	0xFFC
  3851                           pclatu	equ	0xFFB
  3852                           pclath	equ	0xFFA
  3853                           pcl	equ	0xFF9
  3854                           tblptru	equ	0xFF8
  3855                           tblptrh	equ	0xFF7
  3856                           tblptrl	equ	0xFF6
  3857                           tablat	equ	0xFF5
  3858                           prodh	equ	0xFF4
  3859                           prodl	equ	0xFF3
  3860                           indf0	equ	0xFEF
  3861                           postinc0	equ	0xFEE
  3862                           postdec0	equ	0xFED
  3863                           preinc0	equ	0xFEC
  3864                           plusw0	equ	0xFEB
  3865                           fsr0h	equ	0xFEA
  3866                           fsr0l	equ	0xFE9
  3867                           wreg	equ	0xFE8
  3868                           indf1	equ	0xFE7
  3869                           postinc1	equ	0xFE6
  3870                           postdec1	equ	0xFE5
  3871                           preinc1	equ	0xFE4
  3872                           plusw1	equ	0xFE3
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           bsr	equ	0xFE0
  3876                           indf2	equ	0xFDF
  3877                           postinc2	equ	0xFDE
  3878                           postdec2	equ	0xFDD
  3879                           preinc2	equ	0xFDC
  3880                           plusw2	equ	0xFDB
  3881                           fsr2h	equ	0xFDA
  3882                           fsr2l	equ	0xFD9
  3883                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    184
    Data        0
    BSS         69
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      88
    BANK0           160      5      49
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK11          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    S1598$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1598$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[3]), STR_1(CODE[28]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[3]), STR_1(CODE[28]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1633$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[3]), STR_1(CODE[28]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTimer1_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTimer1_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _triangle_60->_out_dig
    _sinus_60->_out_dig
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _carre_60->_out_dig
    _out_dig->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer
    _myTimer1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    5510
                                              0 BANK0      5     5      0
                       _EUSART1_Read
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                           _carre_60
                             _printf
                           _sinus_60
                        _triangle_60
 ---------------------------------------------------------------------------------
 (1) _triangle_60                                          2     2      0     112
                                              9 COMRAM     2     2      0
                            _out_dig
 ---------------------------------------------------------------------------------
 (1) _sinus_60                                             1     1      0     112
                                              9 COMRAM     1     1      0
                            _out_dig
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    3937
                                             42 COMRAM     6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    3676
                                             34 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    3215
                                             25 COMRAM     9     3      6
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1491
                                             17 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1110
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      66
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      44
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _carre_60                                             2     2      0     112
                                              9 COMRAM     2     2      0
                            _out_dig
 ---------------------------------------------------------------------------------
 (2) _out_dig                                              2     2      0      44
                                              7 COMRAM     2     2      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              8 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      37
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           4     4      0     632
                                              2 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     632
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                       _myTimer1_ISR *
 ---------------------------------------------------------------------------------
 (10) _myTimer1_ISR                                        0     0      0     316
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _carre_60
     _out_dig
       _SPI_ExchangeByte
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _fputc
   _sinus_60
     _out_dig
   _triangle_60
     _out_dig

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _myTimer1_ISR *
       _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      11A      0       0      35        0.0%
BITBANK13          100      0       0      45        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      44        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      42        0.0%
BANK11             100      0       0      43        0.0%
BITBANK10          100      0       0      19        0.0%
BANK10             100      0       0      20        0.0%
BITBANK9           100      0       0      41        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      40        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      39        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      38        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      37        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      31       5       30.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      58       1       93.6%
BITBANK14           41      0       0      46        0.0%
BANK14              41      0       0      47        0.0%
BITBIGSFRlllhl      1F      0       0      34        0.0%
BITBIGSFRhl         1D      0       0      24        0.0%
BITBIGSFRlhlhhh     15      0       0      27        0.0%
BITBIGSFRhh          D      0       0      23        0.0%
BITBIGSFRlllhh       B      0       0      33        0.0%
BITBIGSFRlhlhll      8      0       0      29        0.0%
BITBIGSFRllhl        6      0       0      32        0.0%
BITBIGSFRllhh        5      0       0      31        0.0%
BITBIGSFRlhhl        3      0       0      26        0.0%
BITBIGSFRlhlhlh      2      0       0      28        0.0%
BITBIGSFRlhhh        1      0       0      25        0.0%
BITBIGSFRlhll        1      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89      36        0.0%
DATA                 0      0      89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 18 14:24:48 2025

                                _SPI_Initialize 18D0                        _eusart1TxBufferRemaining 0058  
                                            l23 18CE                                              l26 18F2  
                                            l51 17D8                                              l75 18E0  
                                            l85 18A2                                              l87 18B0  
                                            l88 18B4                                     _triangle_60 1618  
                                           l202 1906                                             l132 1948  
                                           l311 18FC                                             l304 1536  
                                           l305 154C                                             l401 1180  
                                           l340 192E                                             l172 1782  
                                           l308 1578                                             l343 1924  
                                           l352 191A                                             l280 1522  
                                           l346 1938                                             l443 187A  
                                           l427 1658                                             l419 171C  
                                           l435 1618                                             l349 1910  
                                           l447 189A                                             l299 15C8  
                                           u900 142C                                             u901 1428  
                                           u910 143E                                             u911 143A  
                                           u920 1466                                             u921 1462  
                                           u930 149C                                             u931 1498  
                                           u940 1392                                             u941 138E  
                                           u870 1536                                             u950 13B8  
                                           u871 1532                                             u951 13B4  
                                           u880 1544                                             u960 1406  
                                           u881 1540                                             u961 1402  
                                           u970 18B0                                             u890 1570  
                                           u971 18AC                                             u891 156C  
                                           u980 11FC                                             u981 11F8  
                                           u990 123E                                             u991 123A  
                               _timer1ReloadVal 0052                                             _car 103D  
                                           _sin 1079                                             _tri 1001  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l2001 1560  
                                          l2003 1570                                            l2011 141A  
                                          l2101 175A                                            l2005 1574  
                                          l2021 149C                                            l2013 142C  
                                          l2111 14B2                                            l2103 1770  
                                          l2007 1576                                            l2015 143E  
                                          l1128 1876                                            l2121 14D8  
                                          l2113 14BE                                            l2105 1772  
                                          l2009 18F6                                            l2017 1448  
                                          l2041 1406                                            l2033 13BC  
                                          l2025 1380                                            l2201 1736  
                                          l1162 13C4                                            l2051 1926  
                                          l2131 1520                                            l2123 14DC  
                                          l2115 14CC                                            l2107 177E  
                                          l2043 189E                                            l2211 1670  
                                          l2203 1658                                            l2019 1466  
                                          l2035 13D0                                            l2027 1392  
                                          l1171 12BE                                            l2053 191C  
                                          l2125 14E0                                            l2117 14D0  
                                          l2109 14B0                                            l2045 18FE  
                                          l2133 187C                                            l2213 1680  
                                          l2037 13E4                                            l2029 139E  
                                          l2061 120A                                            l2141 15CA  
                                          l1166 1418                                            l1158 13AA  
                                          l2055 1930                                            l2047 1912  
                                          l2127 14EC                                            l2119 14D4  
                                          l2151 18B6                                            l2135 188C  
                                          l2215 1682                                            l2039 13E8  
                                          l2063 1216                                            l2143 15D6  
                                          l2223 161C                                            l2049 1908  
                                          l2129 14F8                                            l2161 18CA  
                                          l2153 18BA                                            l2137 1892  
                                          l2209 165C                                            l2073 1284  
                                          l2065 121A                                            l2057 11D8  
                                          l1177 1616                                            l2145 15F2  
                                          l2225 1630                                            l2217 1618  
                                          l2313 11AE                                            l2171 15AC  
                                          l2163 157A                                            l2083 1946  
                                          l2091 17B0                                            l2155 18BE  
                                          l2139 1898                                            l2067 123E  
                                          l2059 11FC                                            l2147 160E  
                                          l2227 1640                                            l2251 10E0  
                                          l2181 15C6                                            l2173 15BC  
                                          l2165 157A                                            l2093 17D6  
                                          l2085 18D0                                            l2157 18C2  
                                          l1189 14AE                                            l2069 1270  
                                          l2077 1296                                            l2229 1642  
                                          l2261 10FE                                            l2253 10EE  
                                          l2175 15C0                                            l2167 158A  
                                          l2095 18E2                                            l2087 18DC  
                                          l2159 18C6                                            l2191 1714  
                                          l2271 1148                                            l2263 1108  
                                          l2255 10F0                                            l2247 10DA  
                                          l2177 15C2                                            l2169 15AA  
                                          l2089 18DE                                            l2097 174C  
                                          l2185 1852                                            l2281 118C  
                                          l2273 115C                                            l2265 1116  
                                          l2257 10F2                                            l2249 10DE  
                                          l2179 15C4                                            l2099 1758  
                                          l2187 185A                                            l2283 1194  
                                          l2275 1164                                            l2267 112A  
                                          l2259 10F2                                            l2197 1720  
                                          l2277 1178                                            l2269 1140  
                                          l2199 1734                                            l2279 1184  
                                          l2287 1198                                            l1991 1526  
                                          l1993 1526                                            l1995 1544  
                                          l1997 154E                                            l1999 155E  
                                          STR_1 10B9                                            STR_2 10D5  
                                          u1000 160E                                            u1001 160A  
                                          u1010 158A                                            u1011 1586  
                                          u1020 15BC                                            u1100 1178  
                                          u1021 15B8                                            u1101 1174  
                                          u1030 1746                                            u1031 1742  
                                          u1040 1692                                            u1041 168E  
                                          u1050 1652                                            u1051 164E  
                                          u1117 1636                                            u1127 1676  
                                          u1080 1140                                            u1137 1882  
                                          u1081 113C                                            u1090 115C  
                                          u1091 1158                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _WPUB 000F5B                                   _EUSART1_Write 1524  
                                          _dbuf 0060                                            _ctoa 1380  
                                          _main 10DA                                   ?_EUSART1_Read 0001  
                                          _prec 0043                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 0059                                            start 00D4  
                        __end_of_SPI_Initialize 18E2                      ??_TMR1_SetInterruptHandler 0009  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                 __end_of_OSCILLATOR_Initialize 18F4                           _eusart1RxStatusBuffer 0031  
                                         ?_ctoa 0012                                           ?_main 0001  
                                         _T1CON 000FCD                                           i2l140 009C  
                                         i2l205 194A                                           i2l145 00C0  
                                         i2l314 16D4                                           i2l138 0062  
                                         i2l331 194C                                           i2l139 00C0  
                                         i2l324 137E                                           i2l317 16D6  
                                         i2l334 193E                                           i2l328 1802  
                                         i2l416 17AE                                           i2l337 1944  
                                         i2l186 182A                                           i2l199 1712  
                                  vfpfcnvrt@fmt 001C                                           _TMR1H 000FCF  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                          _EUSART1_Transmit_ISR 1698                                __end_of_TMR1_ISR 1714  
                                         _flags 0047                                           _fputc 141A  
                                         _width 0041                                           ctoa@c 0014  
                                         _putch 18F4                                           ctoa@l 0016  
                                         ctoa@w 0018                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 1784                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                ??_EUSART1_Read 0007                                 __end_of_out_dig 189C  
                                         ttemp5 005A                                           ttemp6 005D  
                                         ttemp7 0061                                           status 000FD8  
                                         wtemp8 005A           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 194E            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 194C  
                               _TMR1_WriteTimer 1804                                 ?_SPI_Initialize 0001  
                               __initialization 182C                                    __end_of_ctoa 141A  
                    __end_of_EUSART1_Initialize 1524                                    __end_of_main 11D8  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 0015  
                                        ??_main 0088                                   __activetblptr 000002  
                         ?_EUSART1_Transmit_ISR 0001                        __end_of_SPI_ExchangeByte 18B6  
                                        ?_fputc 0009                                          _ANCON0 000F5D  
                                        _ANCON1 000F5C                                          ?_putch 0001  
                                        _T1GCON 000FAA                         TMR1_WriteTimer@timerVal 0001  
                                        i2l1711 1812                                          i2l1721 1826  
                                        i2l1713 1814                                          i2l1715 1818  
                                        i2l1811 178E                                          i2l1741 1800  
                                        i2l1733 17DA                                          i2l1805 193A  
                                        i2l1717 181C                                          i2l1709 1804  
                                        i2l1813 1792                                          i2l1735 17EA  
                                        i2l1807 1940                                          i2l1719 1822  
                                        i2l1815 17A6                                          i2l1911 0036  
                                        i2l1737 17EC                                          i2l1809 1784  
                                        i2l1841 16DA                                          i2l1921 00B8  
                                        i2l1913 0044                                          i2l1739 17FC  
                                        i2l1843 16E6                                          i2l1915 0070  
                                        i2l1907 001A                                          i2l1845 16F8  
                                        i2l1917 007E                                          i2l1909 0028  
                                        i2l1871 16A8                                          i2l1839 16D8  
                                        i2l1919 00AA                                          i2l1881 12C0  
                                        i2l1873 16B8                                          i2l1891 1314  
                                        i2l1883 12D0                                          i2l1875 16BA  
                                        i2l1893 1322                                          i2l1885 12DE  
                                        i2l1877 16CA                                          i2l1869 1698  
                                        i2l1895 133E                                          i2l1887 12EC  
                                        i2l1879 16CE                                          i2l1897 135A  
                                        i2l1889 1306                                          i2l1899 137A  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _SSPADD 000FC8                                          _SSPBUF 000FC9  
                                        _TXREG1 000FAD                                __end_of_carre_60 1698  
                                        _TXSTA1 000FAC            __end_of_TMR1_DefaultInterruptHandler 194C  
                  _TMR1_DefaultInterruptHandler 194A                                    vfprintf@cfmt 0029  
                                  triangle_60@i 000B                                 fp__myTimer1_ISR 0000  
                      ?_EUSART1_SetErrorHandler 0007                               main@typeonde_recu 008B  
                                        clear_0 1832                                          clear_1 183E  
                                        isa$std 000001                                          _printf 1852  
              ??_EUSART1_SetOverrunErrorHandler 0009                 ?_EUSART1_SetOverrunErrorHandler 0007  
                                        ctoa@fp 0012                                          fputc@c 0009  
                                  __mediumconst 0000                                __end_of_sinus_60 174C  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ??_out_dig 0008  
                              __end_of_vfprintf 1618                                 ??_EUSART1_Write 0007  
      TMR1_SetInterruptHandler@InterruptHandler 0007                         __end_of_TMR1_WriteTimer 182C  
                               _eusart1RxBuffer 0080                                 _eusart1TxBuffer 0039  
                              ?_TMR1_Initialize 0001                               _SYSTEM_Initialize 18B6  
                                    __accesstop 0060                         __end_of__initialization 1844  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                 __end_of_EUSART1_RxDataHandler 1804                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 000B                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                 __end_of_fputc 14B0                                   __end_of_putch 18FE  
                                  ?_triangle_60 0001                            __end_of_EUSART1_Read 15CA  
                        ??_EUSART1_Transmit_ISR 0001                                   ?_myTimer1_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 1380                                         ??_fputc 000D  
                     __end_of_SYSTEM_Initialize 18D0                                         ??_putch 0008  
                                 _eusart1RxHead 004B                                   _eusart1TxHead 004D  
                                 _eusart1RxTail 004A                                      __pbssBANK0 0060  
                                 _eusart1TxTail 004C               _EUSART1_TxDefaultInterruptHandler 0056  
               ??_EUSART1_SetRxInterruptHandler 0009                                      __pnvCOMRAM 004E  
               __end_of_EUSART1_SetErrorHandler 193A                                      ??_TMR1_ISR 0003  
                                       ?_printf 002B          __end_of_EUSART1_SetFramingErrorHandler 1930  
                _EUSART1_SetFramingErrorHandler 1926                                  ??_myTimer1_ISR 0003  
                                     ?_carre_60 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _REFOCON 000F9A                                         _OSCCON2 000FD2  
                                       i2u61_40 17A6                                         i2u61_41 17A2  
                                       _OSCTUNE 000F9B                                         i2u71_40 1314  
                                       i2u70_48 12F2                                         i2u63_40 16F8  
                                       i2u71_41 1310                                         i2u70_49 1306  
                                       i2u63_41 16F4                                         i2u80_40 007E  
                                       i2u80_41 007A                                         i2u73_40 135A  
                                       i2u72_48 1328                                         i2u57_40 1812  
                                       i2u64_48 16FE                                         i2u73_41 1356  
                                       i2u72_49 133E                                         i2u57_41 180E  
                                       i2u64_49 1712                                         i2u58_40 17FC  
                                       i2u82_40 00AA                                         i2u81_48 0084  
                                       i2u58_41 17F8                                         i2u82_41 00A6  
                                       i2u81_49 0098                                         i2u74_48 1360  
                                       i2u67_40 16A8                                         i2u83_40 00B8  
                                       i2u75_40 0028                                         i2u74_49 1376  
                                       i2u67_41 16A4                                         i2u83_41 00B4  
                                       i2u75_41 0024                                         _SPBRGH1 000F7D  
                                       i2u68_40 16CA                                         i2u76_40 0036  
                                       i2u68_41 16C6                                         i2u76_41 0032  
                                       i2u69_40 12DE                                         i2u77_40 0044  
                                       i2u69_41 12DA                                         i2u77_41 0040  
                                       i2u79_40 0070                                         i2u78_48 004A  
                                       i2u79_41 006C                                         i2u78_49 005E  
                                       _SSPCON1 000FC6                                         _SSPCON2 000FC5  
                                       _SSPSTAT 000FC7                                ?_TMR1_WriteTimer 0001  
                              ??_SPI_Initialize 0007                                         __Hparam 0000  
                                       __Lparam 0000                                       ?_sinus_60 0001  
                                     ?_vfprintf 0023                                    __psmallconst 1000  
                                       __pcinit 182C                                         __ramtop 1000  
                                       __ptext0 10DA                                         __ptext1 1618  
                                       __ptext2 1714                                         __ptext3 1852  
                                       __ptext4 15CA                                         __ptext5 11D8  
                                       __ptext6 1380                                         __ptext7 141A  
                                       __ptext8 18F4                                         __ptext9 1524  
                ??_TMR1_DefaultInterruptHandler 0001                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 18E2                                      ??_carre_60 000A  
                            _EUSART1_Initialize 14B0                        ??_PIN_MANAGER_Initialize 0007  
                     ?_TMR1_SetInterruptHandler 0007                   ??_EUSART1_DefaultErrorHandler 0001  
                                       _out_dig 1878                               ?_SPI_ExchangeByte 0001  
                          end_of_initialization 1844                             ?_EUSART1_Initialize 0001  
                            ??_SPI_ExchangeByte 0007                                         fputc@fp 000B  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 008F  
         __end_of_EUSART1_SetRxInterruptHandler 191C                   _EUSART1_SetRxInterruptHandler 1912  
                             __end_of_vfpfcnvrt 12C0                                      ??_sinus_60 000A  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                                    ??_vfprintf 0029                            ??_EUSART1_Initialize 0009  
                             _spi_configuration 10B5                                       _TRISCbits 000F94  
                       fp__EUSART1_Transmit_ISR 0000                             EUSART1_Write@txData 0007  
                                  _EUSART1_Read 157A                            __end_of_myTimer1_ISR 17B0  
                  __end_of_INTERRUPT_Initialize 194A                            SPI_ExchangeByte@data 0007  
                     __end_of_spi_configuration 10B9                                     vfpfcnvrt@ap 001E  
                                   vfpfcnvrt@fp 001A                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 1878                             start_initialization 182C  
                                   __end_of_car 1079                                     __end_of_sin 10B5  
                                   __end_of_tri 103D   EUSART1_SetRxInterruptHandler@interruptHandler 0007  
 EUSART1_SetTxInterruptHandler@interruptHandler 0007                                     putch@txData 0008  
                         __end_of_EUSART1_Write 157A                          fp__EUSART1_Receive_ISR 0000  
                                   vfprintf@fmt 0025                           _EUSART1_RxDataHandler 17DA  
                ?_EUSART1_SetRxInterruptHandler 0007                                        ??_printf 002F  
                                _eusart1RxCount 0049                                     __pbssCOMRAM 0031  
             _EUSART1_RxDefaultInterruptHandler 0054                                   __pcstackBANK0 0088  
               ??_EUSART1_SetTxInterruptHandler 0009                ??_EUSART1_SetFramingErrorHandler 0009  
               ?_EUSART1_SetFramingErrorHandler 0007                                       __pnvBANK0 008D  
                        _PIN_MANAGER_Initialize 17B0                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 1908                    ??_INTERRUPT_InterruptManager 0003  
                                   __smallconst 1000                                        _BAUDCON1 000FA7  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 1940  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 193A                            _EUSART1_ErrorHandler 008D  
                       _EUSART1_SetErrorHandler 1930                                        ?_out_dig 0001  
                                     carre_60@i 000B                            _INTERRUPT_Initialize 1946  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 0007  
                                      _PIE1bits 000F9D                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                                      _TMR1_ISR 16D8                                       _vfpfcnvrt 11D8  
                             ??_TMR1_Initialize 0009                                    _myTimer1_ISR 1784  
                                    vfpfcnvrt@c 0022                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                           EUSART1_Read@readValue 0007  
         __end_of_EUSART1_SetTxInterruptHandler 1912                   _EUSART1_SetTxInterruptHandler 1908  
                                      __Hrparam 0000                                      vfprintf@ap 0027  
                                      __Lrparam 0000                                      vfprintf@fp 0023  
                       ??_OSCILLATOR_Initialize 0007                                      ?_vfpfcnvrt 001A  
                                 ??_triangle_60 000A                        _TMR1_SetInterruptHandler 18FE  
                         _TMR1_InterruptHandler 0050                       ??_EUSART1_SetErrorHandler 0009  
           __end_of_EUSART1_DefaultErrorHandler 1946                     _EUSART1_DefaultErrorHandler 1940  
                                      _carre_60 1658                                        __ptext10 1658  
                                      __ptext11 1878                                        __ptext20 14B0  
                                      __ptext12 189C                                        __ptext21 1908  
                                      __ptext13 18B6                                      _T1GCONbits 000FAA  
                                      __ptext30 1784                                        __ptext22 1912  
                                      __ptext14 174C                                        __ptext31 1804  
                                      __ptext23 191C                                        __ptext15 18FE  
                                      __ptext32 1698                                        __ptext24 1926  
                                      __ptext16 18D0                                        __ptext33 12C0  
                                      __ptext25 1930                                        __ptext17 17B0  
                                      __ptext34 193A                                        __ptext26 157A  
                                      __ptext18 18E2                                        __ptext35 194C  
                                      __ptext19 1946                                        __ptext36 1940  
                                      __ptext28 16D8                                        __ptext37 17DA  
                                      __ptext29 194A                                        __ptext38 0000  
EUSART1_SetOverrunErrorHandler@interruptHandler 0007                                        isa$xinst 000000  
                                      _sinus_60 1714                                        int$flags 0059  
                                     sinus_60@i 000A                                        _vfprintf 15CA  
            __end_of_INTERRUPT_InterruptManager 00D4                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 002B                               ??_TMR1_WriteTimer 0003  
                                      main@onde 008A                     _EUSART1_FramingErrorHandler 004E  
                           _EUSART1_Receive_ISR 12C0                                      _INTCONbits 000FF2  
                           __end_of_triangle_60 1658                          ??_INTERRUPT_Initialize 0007  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1926  
                _EUSART1_SetOverrunErrorHandler 191C                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 16D8                                _SPI_ExchangeByte 189C  
                                      printf@ap 002F  EUSART1_SetFramingErrorHandler@interruptHandler 0007  
                ?_EUSART1_SetTxInterruptHandler 0007                                        out_dig@x 0009  
                                   ??_vfpfcnvrt 0020                              _eusart1RxLastError 0048  
                                   _temps_timer 0045                                     _SSPCON1bits 000FC6  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 17DA  
                       ??_EUSART1_RxDataHandler 0001                                 _TMR1_Initialize 174C  
